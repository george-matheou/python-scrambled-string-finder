window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"config": {"fullname": "config", "modulename": "config", "kind": "module", "doc": "<p></p>\n"}, "config.config": {"fullname": "config.config", "modulename": "config.config", "kind": "module", "doc": "<p>Python module that serves as a blueprint for all configuration types.</p>\n"}, "config.config.Config": {"fullname": "config.config.Config", "modulename": "config.config", "qualname": "Config", "kind": "class", "doc": "<p>Base class for all configuration types using Pydantic.\nProvides validation and serialization out of the box.</p>\n", "bases": "pydantic.main.BaseModel"}, "config.config.Config.model_config": {"fullname": "config.config.Config.model_config", "modulename": "config.config", "qualname": "Config.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "config.config_reader": {"fullname": "config.config_reader", "modulename": "config.config_reader", "kind": "module", "doc": "<p>Python module that is responsible for reading a configuration file.</p>\n"}, "config.config_reader.ConfigReader": {"fullname": "config.config_reader.ConfigReader", "modulename": "config.config_reader", "qualname": "ConfigReader", "kind": "class", "doc": "<p>Class that is responsible for reading a configuration file.</p>\n\n<p>Raises:\n    FileNotFoundError: If configuration file does not exist.</p>\n"}, "config.config_reader.ConfigReader.__init__": {"fullname": "config.config_reader.ConfigReader.__init__", "modulename": "config.config_reader", "qualname": "ConfigReader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "config.config_reader.ConfigReader.get_config": {"fullname": "config.config_reader.ConfigReader.get_config", "modulename": "config.config_reader", "qualname": "ConfigReader.get_config", "kind": "function", "doc": "<p>Fetches the configuration for the given section and returns a Config object holding the configuration data.</p>\n\n<p>Args:\n    section (str): The name of the section in the configuration file.\n    config_object_type (Type[Config]): The type of the configuration object that will be returned.</p>\n\n<p>Returns:\n    Config: The configuration object holding the configuration data.</p>\n\n<p>Raises:\n    ValueError: If section is not found in the configuration file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">section</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">config_object_type</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span>:</span></span>", "funcdef": "def"}, "config.config_utils": {"fullname": "config.config_utils", "modulename": "config.config_utils", "kind": "module", "doc": "<p>Python module that contains utility functions for configuration.</p>\n"}, "config.config_utils.print_config": {"fullname": "config.config_utils.print_config", "modulename": "config.config_utils", "qualname": "print_config", "kind": "function", "doc": "<p>Prints configuration information about the given configuration.</p>\n\n<p>Args:\n    config_name (str): The name of the configuration.\n    config (Config): The configuration object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "config.tests": {"fullname": "config.tests", "modulename": "config.tests", "kind": "module", "doc": "<p></p>\n"}, "config.tests.test_config_reader": {"fullname": "config.tests.test_config_reader", "modulename": "config.tests.test_config_reader", "kind": "module", "doc": "<p>Test cases for ConfigReader</p>\n"}, "config.tests.test_config_reader.TestConfigReader": {"fullname": "config.tests.test_config_reader.TestConfigReader", "modulename": "config.tests.test_config_reader", "qualname": "TestConfigReader", "kind": "class", "doc": "<p>Unit tests for the ConfigReader class.</p>\n", "bases": "unittest.case.TestCase"}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"fullname": "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found", "modulename": "config.tests.test_config_reader", "qualname": "TestConfigReader.test_init_file_not_found", "kind": "function", "doc": "<p>Tests that a FileNotFoundError is raised when the config file does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_exists</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"fullname": "config.tests.test_config_reader.TestConfigReader.test_init_file_exists", "modulename": "config.tests.test_config_reader", "qualname": "TestConfigReader.test_init_file_exists", "kind": "function", "doc": "<p>Tests that the config file is read when the file exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_read</span>, </span><span class=\"param\"><span class=\"n\">mock_exists</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"fullname": "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found", "modulename": "config.tests.test_config_reader", "qualname": "TestConfigReader.test_get_config_section_not_found", "kind": "function", "doc": "<p>Tests that a ValueError is raised if the section is not found in the config file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_items</span>, </span><span class=\"param\"><span class=\"n\">mock_sections</span>, </span><span class=\"param\"><span class=\"n\">mock_exists</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"fullname": "config.tests.test_config_reader.TestConfigReader.test_get_config_success", "modulename": "config.tests.test_config_reader", "qualname": "TestConfigReader.test_get_config_success", "kind": "function", "doc": "<p>Tests that the correct configuration object is returned if the section exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_has_section</span>, </span><span class=\"param\"><span class=\"n\">mock_items</span>, </span><span class=\"param\"><span class=\"n\">mock_sections</span>, </span><span class=\"param\"><span class=\"n\">mock_exists</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary": {"fullname": "dictionary", "modulename": "dictionary", "kind": "module", "doc": "<p></p>\n"}, "dictionary.dictionary": {"fullname": "dictionary.dictionary", "modulename": "dictionary.dictionary", "kind": "module", "doc": "<p>Module for managing a dictionary using customizable storage.</p>\n"}, "dictionary.dictionary.Dictionary": {"fullname": "dictionary.dictionary.Dictionary", "modulename": "dictionary.dictionary", "qualname": "Dictionary", "kind": "class", "doc": "<p>Manages dictionary words using a customizable storage strategy.</p>\n\n<p>This class provides high-level operations for managing a dictionary, such as\nadding words, checking for duplicates, and retrieving canonical forms.</p>\n"}, "dictionary.dictionary.Dictionary.__init__": {"fullname": "dictionary.dictionary.Dictionary.__init__", "modulename": "dictionary.dictionary", "qualname": "Dictionary.__init__", "kind": "function", "doc": "<p>Initializes the Dictionary with a given storage strategy.</p>\n\n<p>Args:\n    storage (DictionaryDataStorage): An implementation of the dictionary data storage interface.\n    dictionary_config (DictionaryConfig): Dictionary configuration.\n    logger (Logger): Logger.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">storage</span><span class=\"p\">:</span> <span class=\"n\">dictionary</span><span class=\"o\">.</span><span class=\"n\">dictionary_data_storage</span><span class=\"o\">.</span><span class=\"n\">DictionaryDataStorage</span>,</span><span class=\"param\">\t<span class=\"n\">dictionary_config</span><span class=\"p\">:</span> <span class=\"n\">dictionary</span><span class=\"o\">.</span><span class=\"n\">dictionary_config</span><span class=\"o\">.</span><span class=\"n\">DictionaryConfig</span>,</span><span class=\"param\">\t<span class=\"n\">logger</span><span class=\"p\">:</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">Logger</span></span>)</span>"}, "dictionary.dictionary.Dictionary.dictionary_config": {"fullname": "dictionary.dictionary.Dictionary.dictionary_config", "modulename": "dictionary.dictionary", "qualname": "Dictionary.dictionary_config", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dictionary.dictionary_config.DictionaryConfig"}, "dictionary.dictionary.Dictionary.total_length_of_all_words": {"fullname": "dictionary.dictionary.Dictionary.total_length_of_all_words", "modulename": "dictionary.dictionary", "qualname": "Dictionary.total_length_of_all_words", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "dictionary.dictionary.Dictionary.dictionary_data_storage": {"fullname": "dictionary.dictionary.Dictionary.dictionary_data_storage", "modulename": "dictionary.dictionary", "qualname": "Dictionary.dictionary_data_storage", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dictionary.dictionary_data_storage.DictionaryDataStorage"}, "dictionary.dictionary.Dictionary.logger": {"fullname": "dictionary.dictionary.Dictionary.logger", "modulename": "dictionary.dictionary", "qualname": "Dictionary.logger", "kind": "variable", "doc": "<p></p>\n", "annotation": ": log.logger.Logger"}, "dictionary.dictionary.Dictionary.add_word": {"fullname": "dictionary.dictionary.Dictionary.add_word", "modulename": "dictionary.dictionary", "qualname": "Dictionary.add_word", "kind": "function", "doc": "<p>Adds a word to the dictionary.</p>\n\n<p>Args:\n    word (str): The validated word to add.</p>\n\n<p>Raises:\n    DictionaryError: If a word violates constraints (e.g., duplicate, invalid length),\n                     or if the total length of all words exceeds the configured maximum.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dictionary.dictionary.Dictionary.load_from_file": {"fullname": "dictionary.dictionary.Dictionary.load_from_file", "modulename": "dictionary.dictionary", "qualname": "Dictionary.load_from_file", "kind": "function", "doc": "<p>Reads and validates words from the dictionary file.</p>\n\n<p>Validates each word against length constraints, checks for duplicates,\nand ensures the total length of all words does not exceed the configured limit.</p>\n\n<p>Raises:\n    FileNotFoundError: If the dictionary file does not exist.\n    DictionaryError: If a word violates constraints (e.g., duplicate, invalid length),\n                     or if the total length of all words exceeds the configured maximum.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dictionary_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dictionary.dictionary.Dictionary.get_all_words": {"fullname": "dictionary.dictionary.Dictionary.get_all_words", "modulename": "dictionary.dictionary", "qualname": "Dictionary.get_all_words", "kind": "function", "doc": "<p>Retrieves all words of the dictionary.</p>\n\n<p>Returns:\n    set[str]: A set containing all the original dictionary words.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dictionary.dictionary.Dictionary.get_canonical_word": {"fullname": "dictionary.dictionary.Dictionary.get_canonical_word", "modulename": "dictionary.dictionary", "qualname": "Dictionary.get_canonical_word", "kind": "function", "doc": "<p>Retrieves the canonical form of the given word.</p>\n\n<p>Args:\n    word (str): The word to canonicalize.</p>\n\n<p>Returns:\n    str: The canonical form of the word.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dictionary.dictionary_config": {"fullname": "dictionary.dictionary_config", "modulename": "dictionary.dictionary_config", "kind": "module", "doc": "<p>Python module for the configuration of the dictionary.</p>\n"}, "dictionary.dictionary_config.DictionaryConfig": {"fullname": "dictionary.dictionary_config.DictionaryConfig", "modulename": "dictionary.dictionary_config", "qualname": "DictionaryConfig", "kind": "class", "doc": "<p>Class that contains configuration for the dictionary.</p>\n", "bases": "config.config.Config"}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"fullname": "dictionary.dictionary_config.DictionaryConfig.min_word_length", "modulename": "dictionary.dictionary_config", "qualname": "DictionaryConfig.min_word_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"fullname": "dictionary.dictionary_config.DictionaryConfig.max_word_length", "modulename": "dictionary.dictionary_config", "qualname": "DictionaryConfig.max_word_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"fullname": "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words", "modulename": "dictionary.dictionary_config", "qualname": "DictionaryConfig.max_sum_lengths_of_all_words", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"fullname": "dictionary.dictionary_config.DictionaryConfig.validate_attributes", "modulename": "dictionary.dictionary_config", "qualname": "DictionaryConfig.validate_attributes", "kind": "function", "doc": "<p>Validates the following:\n    - max_word_length is greater than or equal min_word_length.\n    - max_sum_lengths_of_all_words is greater than or equal max_word_length</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"fullname": "dictionary.dictionary_config.DictionaryConfig.model_config", "modulename": "dictionary.dictionary_config", "qualname": "DictionaryConfig.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "dictionary.dictionary_data_storage": {"fullname": "dictionary.dictionary_data_storage", "modulename": "dictionary.dictionary_data_storage", "kind": "module", "doc": "<p>Abstract module for dictionary data storage.</p>\n"}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"fullname": "dictionary.dictionary_data_storage.DictionaryDataStorage", "modulename": "dictionary.dictionary_data_storage", "qualname": "DictionaryDataStorage", "kind": "class", "doc": "<p>Abstract class to define the interface for dictionary data storage.\nDefines the interface for storing and retrieving dictionary words.</p>\n", "bases": "abc.ABC"}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"fullname": "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word", "modulename": "dictionary.dictionary_data_storage", "qualname": "DictionaryDataStorage.add_word", "kind": "function", "doc": "<p>Adds a word to the storage.</p>\n\n<p>Args:\n    word (str): The word to add.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"fullname": "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word", "modulename": "dictionary.dictionary_data_storage", "qualname": "DictionaryDataStorage.contains_word", "kind": "function", "doc": "<p>Checks if the storage contains the given word.</p>\n\n<p>Args:\n    word (str): The word to check.</p>\n\n<p>Returns:\n    bool: True if the word exists, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"fullname": "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words", "modulename": "dictionary.dictionary_data_storage", "qualname": "DictionaryDataStorage.get_all_words", "kind": "function", "doc": "<p>Retrieves all original words from the storage.</p>\n\n<p>Returns:\n    set[str]: A set of all words in the storage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"fullname": "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word", "modulename": "dictionary.dictionary_data_storage", "qualname": "DictionaryDataStorage.get_canonical_word", "kind": "function", "doc": "<p>Retrieves the canonical form of the given word.</p>\n\n<p>Args:\n    word (str): The word to canonicalize.</p>\n\n<p>Returns:\n    str: The canonical form of the word.</p>\n\n<p>Note:\n    If the storage does not contain precomputed canonical forms,\n    this method should compute the canonical form dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dictionary.dictionary_errors": {"fullname": "dictionary.dictionary_errors", "modulename": "dictionary.dictionary_errors", "kind": "module", "doc": "<p>Python module that contains custom exceptions for dictionary.</p>\n"}, "dictionary.dictionary_errors.DictionaryError": {"fullname": "dictionary.dictionary_errors.DictionaryError", "modulename": "dictionary.dictionary_errors", "qualname": "DictionaryError", "kind": "class", "doc": "<p>Exception raised for dictionary processing errors.</p>\n\n<p>Attributes:\n    message -- explanation of the error</p>\n", "bases": "builtins.Exception"}, "dictionary.dictionary_errors.DictionaryError.__init__": {"fullname": "dictionary.dictionary_errors.DictionaryError.__init__", "modulename": "dictionary.dictionary_errors", "qualname": "DictionaryError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, "dictionary.dictionary_errors.DictionaryError.message": {"fullname": "dictionary.dictionary_errors.DictionaryError.message", "modulename": "dictionary.dictionary_errors", "qualname": "DictionaryError.message", "kind": "variable", "doc": "<p></p>\n"}, "dictionary.dictionary_utils": {"fullname": "dictionary.dictionary_utils", "modulename": "dictionary.dictionary_utils", "kind": "module", "doc": "<p>Utility functions for dictionary operations.</p>\n"}, "dictionary.dictionary_utils.compute_canonical_form": {"fullname": "dictionary.dictionary_utils.compute_canonical_form", "modulename": "dictionary.dictionary_utils", "qualname": "compute_canonical_form", "kind": "function", "doc": "<p>Computes the canonical form of a word.</p>\n\n<p>The canonical form keeps the first and last letters fixed,\nwhile sorting the middle characters.</p>\n\n<p>Args:\n    word (str): The word to process.</p>\n\n<p>Returns:\n    str: The canonical form of the word.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"fullname": "dictionary.dictionary_utils.validate_word_length_or_raise", "modulename": "dictionary.dictionary_utils", "qualname": "validate_word_length_or_raise", "kind": "function", "doc": "<p>Validates the length of a word and raises an exception if it is invalid.</p>\n\n<p>Args:\n    word (str): The word to validate.\n    min_word_length (int): Minimum allowed length of the word.\n    max_word_length (int): Maximum allowed length of the word.</p>\n\n<p>Raises:\n    DictionaryError: If the word's length does not meet the constraints.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">min_word_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">max_word_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"fullname": "dictionary.dictionary_utils.validate_total_length_or_raise", "modulename": "dictionary.dictionary_utils", "qualname": "validate_total_length_or_raise", "kind": "function", "doc": "<p>Validates the total length of words and raises an exception if it exceeds the allowed limit.</p>\n\n<p>Args:\n    total_length (int): The current total length of all words.\n    max_allowed_length (int): The maximum allowed total length of all words.</p>\n\n<p>Raises:\n    DictionaryError: If the total length exceeds the allowed limit.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">total_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">max_allowed_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dictionary.hash_dictionary_storage": {"fullname": "dictionary.hash_dictionary_storage", "modulename": "dictionary.hash_dictionary_storage", "kind": "module", "doc": "<p>Module for implementing data storage using a hash table.</p>\n"}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"fullname": "dictionary.hash_dictionary_storage.HashDictionaryStorage", "modulename": "dictionary.hash_dictionary_storage", "qualname": "HashDictionaryStorage", "kind": "class", "doc": "<p>Implements a dictionary data storage using a hash table.</p>\n\n<p>This implementation precomputes and stores the canonical form of each word for\nefficient lookup and comparison during scrambled word matching.</p>\n", "bases": "dictionary.dictionary_data_storage.DictionaryDataStorage"}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"fullname": "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__", "modulename": "dictionary.hash_dictionary_storage", "qualname": "HashDictionaryStorage.__init__", "kind": "function", "doc": "<p>Initializes the HashDictionaryStorage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"fullname": "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage", "modulename": "dictionary.hash_dictionary_storage", "qualname": "HashDictionaryStorage.storage", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[str, str]"}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"fullname": "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word", "modulename": "dictionary.hash_dictionary_storage", "qualname": "HashDictionaryStorage.add_word", "kind": "function", "doc": "<p>Adds a word to the storage.</p>\n\n<p>Args:\n    word (str): The word to add.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"fullname": "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word", "modulename": "dictionary.hash_dictionary_storage", "qualname": "HashDictionaryStorage.contains_word", "kind": "function", "doc": "<p>Checks if the storage contains the given word.</p>\n\n<p>Args:\n    word (str): The word to check.</p>\n\n<p>Returns:\n    bool: True if the word exists, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"fullname": "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words", "modulename": "dictionary.hash_dictionary_storage", "qualname": "HashDictionaryStorage.get_all_words", "kind": "function", "doc": "<p>Retrieves all original words from the storage.</p>\n\n<p>Returns:\n    set[str]: A set of all words in the storage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"fullname": "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word", "modulename": "dictionary.hash_dictionary_storage", "qualname": "HashDictionaryStorage.get_canonical_word", "kind": "function", "doc": "<p>Retrieves the canonical form of the given word.</p>\n\n<p>If the word exists in the dictionary, its precomputed canonical form is returned.\nOtherwise, the canonical form is computed dynamically.</p>\n\n<p>Args:\n    word (str): The word to canonicalize.</p>\n\n<p>Returns:\n    str: The canonical form of the word.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dictionary.set_dictionary_storage": {"fullname": "dictionary.set_dictionary_storage", "modulename": "dictionary.set_dictionary_storage", "kind": "module", "doc": "<p>Module for implementing data storage using a set.</p>\n"}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"fullname": "dictionary.set_dictionary_storage.SetDictionaryStorage", "modulename": "dictionary.set_dictionary_storage", "qualname": "SetDictionaryStorage", "kind": "class", "doc": "<p>Implements a dictionary data storage using a set.</p>\n\n<p>Unlike other implementations, this class does not precompute or store canonical forms\nof the words, opting instead to compute them dynamically when needed. This approach\nprioritizes storage efficiency while maintaining flexibility for scrambled word matching.</p>\n", "bases": "dictionary.dictionary_data_storage.DictionaryDataStorage"}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"fullname": "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__", "modulename": "dictionary.set_dictionary_storage", "qualname": "SetDictionaryStorage.__init__", "kind": "function", "doc": "<p>Initializes the SetDictionaryStorage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"fullname": "dictionary.set_dictionary_storage.SetDictionaryStorage.storage", "modulename": "dictionary.set_dictionary_storage", "qualname": "SetDictionaryStorage.storage", "kind": "variable", "doc": "<p></p>\n", "annotation": ": set[str]"}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"fullname": "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word", "modulename": "dictionary.set_dictionary_storage", "qualname": "SetDictionaryStorage.add_word", "kind": "function", "doc": "<p>Adds a word to the storage.</p>\n\n<p>Args:\n    word (str): The word to add.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"fullname": "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word", "modulename": "dictionary.set_dictionary_storage", "qualname": "SetDictionaryStorage.contains_word", "kind": "function", "doc": "<p>Checks if the storage contains the given word.</p>\n\n<p>Args:\n    word (str): The word to check.</p>\n\n<p>Returns:\n    bool: True if the word exists, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"fullname": "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words", "modulename": "dictionary.set_dictionary_storage", "qualname": "SetDictionaryStorage.get_all_words", "kind": "function", "doc": "<p>Retrieves all original words in the dictionary.</p>\n\n<p>Returns:\n    set[str]: A set containing all the original dictionary words.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"fullname": "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word", "modulename": "dictionary.set_dictionary_storage", "qualname": "SetDictionaryStorage.get_canonical_word", "kind": "function", "doc": "<p>Computes and returns the canonical form of the given word.</p>\n\n<p>Args:\n    word (str): The word to canonicalize.</p>\n\n<p>Returns:\n    str: The canonical form of the word.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dictionary.tests": {"fullname": "dictionary.tests", "modulename": "dictionary.tests", "kind": "module", "doc": "<p></p>\n"}, "dictionary.tests.test_dictionary": {"fullname": "dictionary.tests.test_dictionary", "modulename": "dictionary.tests.test_dictionary", "kind": "module", "doc": "<p>Test cases for Dictionary.</p>\n"}, "dictionary.tests.test_dictionary.TestDictionary": {"fullname": "dictionary.tests.test_dictionary.TestDictionary", "modulename": "dictionary.tests.test_dictionary", "qualname": "TestDictionary", "kind": "class", "doc": "<p>Unit tests for the Dictionary class.</p>\n", "bases": "unittest.case.TestCase"}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"fullname": "dictionary.tests.test_dictionary.TestDictionary.setUp", "modulename": "dictionary.tests.test_dictionary", "qualname": "TestDictionary.setUp", "kind": "function", "doc": "<p>Set up common test data and mocks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"fullname": "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration", "modulename": "dictionary.tests.test_dictionary", "qualname": "TestDictionary.generic_test_integration", "kind": "function", "doc": "<p>Generic function for testing integration</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dictionary_storage</span><span class=\"p\">:</span> <span class=\"n\">dictionary</span><span class=\"o\">.</span><span class=\"n\">dictionary_data_storage</span><span class=\"o\">.</span><span class=\"n\">DictionaryDataStorage</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"fullname": "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage", "modulename": "dictionary.tests.test_dictionary", "qualname": "TestDictionary.test_integration_with_set_storage", "kind": "function", "doc": "<p>Test integration with SetDictionaryStorage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"fullname": "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage", "modulename": "dictionary.tests.test_dictionary", "qualname": "TestDictionary.test_integration_with_hash_storage", "kind": "function", "doc": "<p>Test integration with HashDictionaryStorage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"fullname": "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word", "modulename": "dictionary.tests.test_dictionary", "qualname": "TestDictionary.test_add_duplicate_word", "kind": "function", "doc": "<p>Test that adding duplicate words raises an error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"fullname": "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range", "modulename": "dictionary.tests.test_dictionary", "qualname": "TestDictionary.test_large_words_exceeding_length_range", "kind": "function", "doc": "<p>Test that words exceeding the allowed length range raise an error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"fullname": "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded", "modulename": "dictionary.tests.test_dictionary", "qualname": "TestDictionary.test_total_allowed_length_exceeded", "kind": "function", "doc": "<p>Test that adding words whose total length exceeds the limit raises an error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"fullname": "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file", "modulename": "dictionary.tests.test_dictionary", "qualname": "TestDictionary.test_load_from_file", "kind": "function", "doc": "<p>Test loading words from a file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_file</span>, </span><span class=\"param\"><span class=\"n\">mock_exists</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"fullname": "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file", "modulename": "dictionary.tests.test_dictionary", "qualname": "TestDictionary.test_load_from_empty_file", "kind": "function", "doc": "<p>Test loading from an empty file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_file</span>, </span><span class=\"param\"><span class=\"n\">mock_exists</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary_config": {"fullname": "dictionary.tests.test_dictionary_config", "modulename": "dictionary.tests.test_dictionary_config", "kind": "module", "doc": "<p>Test cases for AppConfig</p>\n"}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"fullname": "dictionary.tests.test_dictionary_config.TestDictionaryConfig", "modulename": "dictionary.tests.test_dictionary_config", "qualname": "TestDictionaryConfig", "kind": "class", "doc": "<p>Unit tests for the DictionaryConfig class.</p>\n", "bases": "unittest.case.TestCase"}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"fullname": "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config", "modulename": "dictionary.tests.test_dictionary_config", "qualname": "TestDictionaryConfig.test_valid_config", "kind": "function", "doc": "<p>Test that a valid configuration is accepted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"fullname": "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max", "modulename": "dictionary.tests.test_dictionary_config", "qualname": "TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max", "kind": "function", "doc": "<p>Test that an error is raised when min_word_length &gt; max_word_length.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"fullname": "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths", "modulename": "dictionary.tests.test_dictionary_config", "qualname": "TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths", "kind": "function", "doc": "<p>Test that an error is raised when max_word_length &gt; max_sum_lengths_of_all_words.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"fullname": "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative", "modulename": "dictionary.tests.test_dictionary_config", "qualname": "TestDictionaryConfig.test_dictionary_min_word_length_negative", "kind": "function", "doc": "<p>Test that an error is raised for a negative min_word_length.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"fullname": "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative", "modulename": "dictionary.tests.test_dictionary_config", "qualname": "TestDictionaryConfig.test_dictionary_max_word_length_negative", "kind": "function", "doc": "<p>Test that an error is raised for a negative max_word_length.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"fullname": "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative", "modulename": "dictionary.tests.test_dictionary_config", "qualname": "TestDictionaryConfig.test_dictionary_max_sum_lengths_negative", "kind": "function", "doc": "<p>Test that an error is raised for a negative max_sum_lengths_of_all_words.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"fullname": "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values", "modulename": "dictionary.tests.test_dictionary_config", "qualname": "TestDictionaryConfig.test_default_values", "kind": "function", "doc": "<p>Test that default values are set correctly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary_utils": {"fullname": "dictionary.tests.test_dictionary_utils", "modulename": "dictionary.tests.test_dictionary_utils", "kind": "module", "doc": "<p>Test cases for Dictionary utility functions</p>\n"}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"fullname": "dictionary.tests.test_dictionary_utils.TestDictionaryUtils", "modulename": "dictionary.tests.test_dictionary_utils", "qualname": "TestDictionaryUtils", "kind": "class", "doc": "<p>Unit tests for utility functions in dictionary_utils.</p>\n", "bases": "unittest.case.TestCase"}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"fullname": "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form", "modulename": "dictionary.tests.test_dictionary_utils", "qualname": "TestDictionaryUtils.test_compute_canonical_form", "kind": "function", "doc": "<p>Test that canonical forms are computed correctly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"fullname": "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise", "modulename": "dictionary.tests.test_dictionary_utils", "qualname": "TestDictionaryUtils.test_validate_word_length_or_raise", "kind": "function", "doc": "<p>Test that word length validation works as expected.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"fullname": "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise", "modulename": "dictionary.tests.test_dictionary_utils", "qualname": "TestDictionaryUtils.test_validate_total_length_or_raise", "kind": "function", "doc": "<p>Test that total length validation works as expected.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_hash_dictionary_storage": {"fullname": "dictionary.tests.test_hash_dictionary_storage", "modulename": "dictionary.tests.test_hash_dictionary_storage", "kind": "module", "doc": "<p>Test cases for HashDictionaryStorage.</p>\n"}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"fullname": "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage", "modulename": "dictionary.tests.test_hash_dictionary_storage", "qualname": "TestHashDictionaryStorage", "kind": "class", "doc": "<p>Unit tests for the HashDictionaryStorage class.</p>\n", "bases": "unittest.case.TestCase"}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"fullname": "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp", "modulename": "dictionary.tests.test_hash_dictionary_storage", "qualname": "TestHashDictionaryStorage.setUp", "kind": "function", "doc": "<p>Set up a fresh instance of HashDictionaryStorage for each test.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"fullname": "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word", "modulename": "dictionary.tests.test_hash_dictionary_storage", "qualname": "TestHashDictionaryStorage.test_add_and_contains_word", "kind": "function", "doc": "<p>Test adding words and checking their existence in the storage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"fullname": "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words", "modulename": "dictionary.tests.test_hash_dictionary_storage", "qualname": "TestHashDictionaryStorage.test_get_all_words", "kind": "function", "doc": "<p>Test that all stored words are retrieved correctly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"fullname": "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word", "modulename": "dictionary.tests.test_hash_dictionary_storage", "qualname": "TestHashDictionaryStorage.test_get_canonical_word", "kind": "function", "doc": "<p>Test retrieval of canonical forms for both existing and non-existing words.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_set_dictionary_storage": {"fullname": "dictionary.tests.test_set_dictionary_storage", "modulename": "dictionary.tests.test_set_dictionary_storage", "kind": "module", "doc": "<p>Test cases for SetDictionaryStorage.</p>\n"}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"fullname": "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage", "modulename": "dictionary.tests.test_set_dictionary_storage", "qualname": "TestSetDictionaryStorage", "kind": "class", "doc": "<p>Unit tests for the SetDictionaryStorage class.</p>\n", "bases": "unittest.case.TestCase"}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"fullname": "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp", "modulename": "dictionary.tests.test_set_dictionary_storage", "qualname": "TestSetDictionaryStorage.setUp", "kind": "function", "doc": "<p>Set up a fresh instance of SetDictionaryStorage for each test.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"fullname": "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word", "modulename": "dictionary.tests.test_set_dictionary_storage", "qualname": "TestSetDictionaryStorage.test_add_and_contains_word", "kind": "function", "doc": "<p>Test adding words and checking their existence in the storage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"fullname": "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words", "modulename": "dictionary.tests.test_set_dictionary_storage", "qualname": "TestSetDictionaryStorage.test_get_all_words", "kind": "function", "doc": "<p>Test that all stored words are retrieved correctly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"fullname": "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word", "modulename": "dictionary.tests.test_set_dictionary_storage", "qualname": "TestSetDictionaryStorage.test_get_canonical_word", "kind": "function", "doc": "<p>Test retrieval of canonical forms for words.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log": {"fullname": "log", "modulename": "log", "kind": "module", "doc": "<p></p>\n"}, "log.log_config": {"fullname": "log.log_config", "modulename": "log.log_config", "kind": "module", "doc": "<p>Python module that is responsible for managing the log configuration.</p>\n"}, "log.log_config.LogConfig": {"fullname": "log.log_config.LogConfig", "modulename": "log.log_config", "qualname": "LogConfig", "kind": "class", "doc": "<p>Class that manages configuration data for logging.</p>\n", "bases": "config.config.Config"}, "log.log_config.LogConfig.log_file": {"fullname": "log.log_config.LogConfig.log_file", "modulename": "log.log_config", "qualname": "LogConfig.log_file", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "log.log_config.LogConfig.log_max_bytes": {"fullname": "log.log_config.LogConfig.log_max_bytes", "modulename": "log.log_config", "qualname": "LogConfig.log_max_bytes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "log.log_config.LogConfig.log_backup_count": {"fullname": "log.log_config.LogConfig.log_backup_count", "modulename": "log.log_config", "qualname": "LogConfig.log_backup_count", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "log.log_config.LogConfig.log_enable_console": {"fullname": "log.log_config.LogConfig.log_enable_console", "modulename": "log.log_config", "qualname": "LogConfig.log_enable_console", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, "log.log_config.LogConfig.log_level": {"fullname": "log.log_config.LogConfig.log_level", "modulename": "log.log_config", "qualname": "LogConfig.log_level", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;CRITICAL&#x27;, &#x27;ERROR&#x27;, &#x27;WARNING&#x27;, &#x27;INFO&#x27;, &#x27;DEBUG&#x27;]"}, "log.log_config.LogConfig.normalize_log_level": {"fullname": "log.log_config.LogConfig.normalize_log_level", "modulename": "log.log_config", "qualname": "LogConfig.normalize_log_level", "kind": "function", "doc": "<p>Converts the log_level attribute to uppercase.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "log.log_config.LogConfig.validate_log_file": {"fullname": "log.log_config.LogConfig.validate_log_file", "modulename": "log.log_config", "qualname": "LogConfig.validate_log_file", "kind": "function", "doc": "<p>Ensures that log_file is not null or an empty string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "log.log_config.LogConfig.model_config": {"fullname": "log.log_config.LogConfig.model_config", "modulename": "log.log_config", "qualname": "LogConfig.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "log.logger": {"fullname": "log.logger", "modulename": "log.logger", "kind": "module", "doc": "<p>Abstract module for logger abstraction.</p>\n\n<p>Defines the <code>Logger</code> interface for decoupling logging operations\nfrom specific implementations.</p>\n"}, "log.logger.Logger": {"fullname": "log.logger.Logger", "modulename": "log.logger", "qualname": "Logger", "kind": "class", "doc": "<p>Abstract base class for logging operations.</p>\n", "bases": "abc.ABC"}, "log.logger.Logger.info": {"fullname": "log.logger.Logger.info", "modulename": "log.logger", "qualname": "Logger.info", "kind": "function", "doc": "<p>Logs an informational message.</p>\n\n<p>Args:\n    message (str): The message to log.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.logger.Logger.debug": {"fullname": "log.logger.Logger.debug", "modulename": "log.logger", "qualname": "Logger.debug", "kind": "function", "doc": "<p>Logs a debug message.</p>\n\n<p>Args:\n    message (str): The message to log.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.logger.Logger.warning": {"fullname": "log.logger.Logger.warning", "modulename": "log.logger", "qualname": "Logger.warning", "kind": "function", "doc": "<p>Logs a warning message.</p>\n\n<p>Args:\n    message (str): The message to log.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.logger.Logger.error": {"fullname": "log.logger.Logger.error", "modulename": "log.logger", "qualname": "Logger.error", "kind": "function", "doc": "<p>Logs an error message.</p>\n\n<p>Args:\n    message (str): The message to log.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.logger.Logger.critical": {"fullname": "log.logger.Logger.critical", "modulename": "log.logger", "qualname": "Logger.critical", "kind": "function", "doc": "<p>Logs a critical message.</p>\n\n<p>Args:\n    message (str): The message to log.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.logger.Logger.always": {"fullname": "log.logger.Logger.always", "modulename": "log.logger", "qualname": "Logger.always", "kind": "function", "doc": "<p>Logs a message always.</p>\n\n<p>Args:\n    message (str): The message to log.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.standard_logger": {"fullname": "log.standard_logger", "modulename": "log.standard_logger", "kind": "module", "doc": "<p>Python module that is responsible for logging functionalities.</p>\n"}, "log.standard_logger.StandardLogger": {"fullname": "log.standard_logger.StandardLogger", "modulename": "log.standard_logger", "qualname": "StandardLogger", "kind": "class", "doc": "<p>Singleton class that manages a global logger instance for the application.</p>\n", "bases": "log.logger.Logger"}, "log.standard_logger.StandardLogger.__init__": {"fullname": "log.standard_logger.StandardLogger.__init__", "modulename": "log.standard_logger", "qualname": "StandardLogger.__init__", "kind": "function", "doc": "<p>Creates a new instance of Logger if it doesn't exist or returns the existing instance.</p>\n\n<p>Args:\n    log_config (LogConfig): The LogConfig object used to configure the logger.\n    logger_name (str): The name of the logger.</p>\n\n<p>Returns:\n    Logger: The single instance of Logger.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">log_config</span><span class=\"p\">:</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">log_config</span><span class=\"o\">.</span><span class=\"n\">LogConfig</span>, </span><span class=\"param\"><span class=\"n\">logger_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "log.standard_logger.StandardLogger.reset_instance": {"fullname": "log.standard_logger.StandardLogger.reset_instance", "modulename": "log.standard_logger", "qualname": "StandardLogger.reset_instance", "kind": "function", "doc": "<p>Resets the singleton instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.standard_logger.StandardLogger.info": {"fullname": "log.standard_logger.StandardLogger.info", "modulename": "log.standard_logger", "qualname": "StandardLogger.info", "kind": "function", "doc": "<p>Logs an informational message.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.standard_logger.StandardLogger.debug": {"fullname": "log.standard_logger.StandardLogger.debug", "modulename": "log.standard_logger", "qualname": "StandardLogger.debug", "kind": "function", "doc": "<p>Logs a debug message.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.standard_logger.StandardLogger.warning": {"fullname": "log.standard_logger.StandardLogger.warning", "modulename": "log.standard_logger", "qualname": "StandardLogger.warning", "kind": "function", "doc": "<p>Logs a warning message.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.standard_logger.StandardLogger.error": {"fullname": "log.standard_logger.StandardLogger.error", "modulename": "log.standard_logger", "qualname": "StandardLogger.error", "kind": "function", "doc": "<p>Logs an error message.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.standard_logger.StandardLogger.critical": {"fullname": "log.standard_logger.StandardLogger.critical", "modulename": "log.standard_logger", "qualname": "StandardLogger.critical", "kind": "function", "doc": "<p>Logs a critical message.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.standard_logger.StandardLogger.always": {"fullname": "log.standard_logger.StandardLogger.always", "modulename": "log.standard_logger", "qualname": "StandardLogger.always", "kind": "function", "doc": "<p>Logs a message always.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "log.tests": {"fullname": "log.tests", "modulename": "log.tests", "kind": "module", "doc": "<p></p>\n"}, "log.tests.test_log_config": {"fullname": "log.tests.test_log_config", "modulename": "log.tests.test_log_config", "kind": "module", "doc": "<p>Test cases for LogConfig</p>\n"}, "log.tests.test_log_config.TestLogConfig": {"fullname": "log.tests.test_log_config.TestLogConfig", "modulename": "log.tests.test_log_config", "qualname": "TestLogConfig", "kind": "class", "doc": "<p>Unit tests for the LogConfig class.</p>\n", "bases": "unittest.case.TestCase"}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"fullname": "log.tests.test_log_config.TestLogConfig.test_log_config_valid", "modulename": "log.tests.test_log_config", "qualname": "TestLogConfig.test_log_config_valid", "kind": "function", "doc": "<p>Test that LogConfig loads valid values correctly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"fullname": "log.tests.test_log_config.TestLogConfig.test_default_values", "modulename": "log.tests.test_log_config", "qualname": "TestLogConfig.test_default_values", "kind": "function", "doc": "<p>Test that default values are set correctly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"fullname": "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity", "modulename": "log.tests.test_log_config", "qualname": "TestLogConfig.test_log_level_case_insensitivity", "kind": "function", "doc": "<p>Test that LogConfig handles log level case insensitivity.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"fullname": "log.tests.test_log_config.TestLogConfig.test_invalid_log_level", "modulename": "log.tests.test_log_config", "qualname": "TestLogConfig.test_invalid_log_level", "kind": "function", "doc": "<p>Test that LogConfig raises an error for invalid log levels.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"fullname": "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes", "modulename": "log.tests.test_log_config", "qualname": "TestLogConfig.test_negative_log_max_bytes", "kind": "function", "doc": "<p>Test that a negative value for log_max_bytes raises an error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"fullname": "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count", "modulename": "log.tests.test_log_config", "qualname": "TestLogConfig.test_negative_log_backup_count", "kind": "function", "doc": "<p>Test that a negative value for log_backup_count raises an error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"fullname": "log.tests.test_log_config.TestLogConfig.test_empty_log_file", "modulename": "log.tests.test_log_config", "qualname": "TestLogConfig.test_empty_log_file", "kind": "function", "doc": "<p>Test that an empty log_file raises an error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.tests.test_standard_logger": {"fullname": "log.tests.test_standard_logger", "modulename": "log.tests.test_standard_logger", "kind": "module", "doc": "<p>Test cases for StandardLogger</p>\n"}, "log.tests.test_standard_logger.TestStandardLogger": {"fullname": "log.tests.test_standard_logger.TestStandardLogger", "modulename": "log.tests.test_standard_logger", "qualname": "TestStandardLogger", "kind": "class", "doc": "<p>Unit tests for the StandardLogger class.</p>\n", "bases": "unittest.case.TestCase"}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"fullname": "log.tests.test_standard_logger.TestStandardLogger.setUp", "modulename": "log.tests.test_standard_logger", "qualname": "TestStandardLogger.setUp", "kind": "function", "doc": "<p>Set up a sample LogConfig for testing.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"fullname": "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior", "modulename": "log.tests.test_standard_logger", "qualname": "TestStandardLogger.test_singleton_behavior", "kind": "function", "doc": "<p>Test that StandardLogger behaves as a singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">_</span>, </span><span class=\"param\"><span class=\"n\">mock_get_logger</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"fullname": "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization", "modulename": "log.tests.test_standard_logger", "qualname": "TestStandardLogger.test_logger_initialization", "kind": "function", "doc": "<p>Test that the logger is initialized correctly with the provided configuration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_create_parent_dirs</span>, </span><span class=\"param\"><span class=\"n\">mock_get_logger</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"fullname": "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods", "modulename": "log.tests.test_standard_logger", "qualname": "TestStandardLogger.test_logging_methods", "kind": "function", "doc": "<p>Test that logging methods call the appropriate logger methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_get_logger</span>, </span><span class=\"param\"><span class=\"n\">_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tests": {"fullname": "tests", "modulename": "tests", "kind": "module", "doc": "<p></p>\n"}, "tests.test_scrambled_string_finder": {"fullname": "tests.test_scrambled_string_finder", "modulename": "tests.test_scrambled_string_finder", "kind": "module", "doc": "<p>Test cases for ScrambledStringFinder.</p>\n"}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"fullname": "tests.test_scrambled_string_finder.TestScrambledStringFinder", "modulename": "tests.test_scrambled_string_finder", "qualname": "TestScrambledStringFinder", "kind": "class", "doc": "<p>Unit tests for the ScrambledStringFinder class.</p>\n", "bases": "unittest.case.TestCase"}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"fullname": "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp", "modulename": "tests.test_scrambled_string_finder", "qualname": "TestScrambledStringFinder.setUp", "kind": "function", "doc": "<p>Set up mocks for InputProvider, Dictionary, and Logger.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"fullname": "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches", "modulename": "tests.test_scrambled_string_finder", "qualname": "TestScrambledStringFinder.test_exact_matches", "kind": "function", "doc": "<p>Test that exact matches are counted correctly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"fullname": "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches", "modulename": "tests.test_scrambled_string_finder", "qualname": "TestScrambledStringFinder.test_scrambled_matches", "kind": "function", "doc": "<p>Test that scrambled matches are counted correctly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"fullname": "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches", "modulename": "tests.test_scrambled_string_finder", "qualname": "TestScrambledStringFinder.test_no_matches", "kind": "function", "doc": "<p>Test that no matches result in counts of 0.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"fullname": "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary", "modulename": "tests.test_scrambled_string_finder", "qualname": "TestScrambledStringFinder.test_empty_dictionary", "kind": "function", "doc": "<p>Test that an empty dictionary results in 0 counts for all inputs.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "utils": {"fullname": "utils", "modulename": "utils", "kind": "module", "doc": "<p></p>\n"}, "utils.file_utils": {"fullname": "utils.file_utils", "modulename": "utils.file_utils", "kind": "module", "doc": "<p>Python module that includes utility functions for file manipulation.</p>\n"}, "utils.file_utils.create_parent_directories": {"fullname": "utils.file_utils.create_parent_directories", "modulename": "utils.file_utils", "qualname": "create_parent_directories", "kind": "function", "doc": "<p>Creates parent directories of a path if they do not exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "utils.tests": {"fullname": "utils.tests", "modulename": "utils.tests", "kind": "module", "doc": "<p></p>\n"}, "utils.tests.test_file_utils": {"fullname": "utils.tests.test_file_utils", "modulename": "utils.tests.test_file_utils", "kind": "module", "doc": "<p>Test cases for file utilities.</p>\n"}, "utils.tests.test_file_utils.TestFileUtils": {"fullname": "utils.tests.test_file_utils.TestFileUtils", "modulename": "utils.tests.test_file_utils", "qualname": "TestFileUtils", "kind": "class", "doc": "<p>Unit tests for the file_utils module.</p>\n", "bases": "unittest.case.TestCase"}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"fullname": "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success", "modulename": "utils.tests.test_file_utils", "qualname": "TestFileUtils.test_create_parent_directories_success", "kind": "function", "doc": "<p>Test that create_parent_directories calls os.makedirs correctly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_makedirs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"fullname": "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists", "modulename": "utils.tests.test_file_utils", "qualname": "TestFileUtils.test_create_parent_directories_already_exists", "kind": "function", "doc": "<p>Test that create_parent_directories doesn't create directories if they already exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_makedirs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"fullname": "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error", "modulename": "utils.tests.test_file_utils", "qualname": "TestFileUtils.test_create_parent_directories_error", "kind": "function", "doc": "<p>Test that create_parent_directories raises an OSError if directory creation fails.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_makedirs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "input_strings": {"fullname": "input_strings", "modulename": "input_strings", "kind": "module", "doc": "<p></p>\n"}, "input_strings.input_file_provider": {"fullname": "input_strings.input_file_provider", "modulename": "input_strings.input_file_provider", "kind": "module", "doc": "<p>Concrete implementation of InputProvider using file-based input.</p>\n"}, "input_strings.input_file_provider.InputFileProvider": {"fullname": "input_strings.input_file_provider.InputFileProvider", "modulename": "input_strings.input_file_provider", "qualname": "InputFileProvider", "kind": "class", "doc": "<p>Class responsible for reading and processing input strings from a file.</p>\n", "bases": "input_strings.input_provider.InputProvider"}, "input_strings.input_file_provider.InputFileProvider.__init__": {"fullname": "input_strings.input_file_provider.InputFileProvider.__init__", "modulename": "input_strings.input_file_provider", "qualname": "InputFileProvider.__init__", "kind": "function", "doc": "<p>Initializes the InputFileProcessor.</p>\n\n<p>Args:\n    input_file_path (str): Path to the input file.\n    input_strings_config (InputStringsConfig): Configuration of the input strings.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">input_strings_config</span><span class=\"p\">:</span> <span class=\"n\">input_strings</span><span class=\"o\">.</span><span class=\"n\">input_strings_config</span><span class=\"o\">.</span><span class=\"n\">InputStringsConfig</span></span>)</span>"}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"fullname": "input_strings.input_file_provider.InputFileProvider.input_file_path", "modulename": "input_strings.input_file_provider", "qualname": "InputFileProvider.input_file_path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "input_strings.input_file_provider.InputFileProvider.inputs": {"fullname": "input_strings.input_file_provider.InputFileProvider.inputs", "modulename": "input_strings.input_file_provider", "qualname": "InputFileProvider.inputs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[str]"}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"fullname": "input_strings.input_file_provider.InputFileProvider.input_strings_config", "modulename": "input_strings.input_file_provider", "qualname": "InputFileProvider.input_strings_config", "kind": "variable", "doc": "<p></p>\n", "annotation": ": input_strings.input_strings_config.InputStringsConfig"}, "input_strings.input_file_provider.InputFileProvider.load": {"fullname": "input_strings.input_file_provider.InputFileProvider.load", "modulename": "input_strings.input_file_provider", "qualname": "InputFileProvider.load", "kind": "function", "doc": "<p>Loads lines from the input file.</p>\n\n<p>Raises:\n    FileNotFoundError: If the input file does not exist.\n    InputStringError: If a line violates constraints (e.g., invalid length)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "input_strings.input_file_provider.InputFileProvider.get": {"fullname": "input_strings.input_file_provider.InputFileProvider.get", "modulename": "input_strings.input_file_provider", "qualname": "InputFileProvider.get", "kind": "function", "doc": "<p>Returns the input strings.</p>\n\n<p>Returns:\n    List[str]: A list of input strings.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "input_strings.input_provider": {"fullname": "input_strings.input_provider", "modulename": "input_strings.input_provider", "kind": "module", "doc": "<p>Abstract module for input providers.</p>\n"}, "input_strings.input_provider.InputProvider": {"fullname": "input_strings.input_provider.InputProvider", "modulename": "input_strings.input_provider", "qualname": "InputProvider", "kind": "class", "doc": "<p>Abstract class to define the interface for input providers.</p>\n", "bases": "abc.ABC"}, "input_strings.input_provider.InputProvider.load": {"fullname": "input_strings.input_provider.InputProvider.load", "modulename": "input_strings.input_provider", "qualname": "InputProvider.load", "kind": "function", "doc": "<p>Loads the input data.</p>\n\n<p>Raises:\n    Exception: If the input cannot be loaded.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "input_strings.input_provider.InputProvider.get": {"fullname": "input_strings.input_provider.InputProvider.get", "modulename": "input_strings.input_provider", "qualname": "InputProvider.get", "kind": "function", "doc": "<p>Returns the input strings.</p>\n\n<p>Returns:\n    List[str]: A list of input strings.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "input_strings.input_string_errors": {"fullname": "input_strings.input_string_errors", "modulename": "input_strings.input_string_errors", "kind": "module", "doc": "<p>Python module that contains custom exceptions for input strings.</p>\n"}, "input_strings.input_string_errors.InputStringError": {"fullname": "input_strings.input_string_errors.InputStringError", "modulename": "input_strings.input_string_errors", "qualname": "InputStringError", "kind": "class", "doc": "<p>Exception raised for input string processing errors.</p>\n\n<p>Attributes:\n    message -- explanation of the error</p>\n", "bases": "builtins.Exception"}, "input_strings.input_string_errors.InputStringError.__init__": {"fullname": "input_strings.input_string_errors.InputStringError.__init__", "modulename": "input_strings.input_string_errors", "qualname": "InputStringError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, "input_strings.input_string_errors.InputStringError.message": {"fullname": "input_strings.input_string_errors.InputStringError.message", "modulename": "input_strings.input_string_errors", "qualname": "InputStringError.message", "kind": "variable", "doc": "<p></p>\n"}, "input_strings.input_strings_config": {"fullname": "input_strings.input_strings_config", "modulename": "input_strings.input_strings_config", "kind": "module", "doc": "<p>Python module that is responsible for the configuration of input strings.</p>\n"}, "input_strings.input_strings_config.InputStringsConfig": {"fullname": "input_strings.input_strings_config.InputStringsConfig", "modulename": "input_strings.input_strings_config", "qualname": "InputStringsConfig", "kind": "class", "doc": "<p>Class that contains configuration for the input strings.</p>\n", "bases": "config.config.Config"}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"fullname": "input_strings.input_strings_config.InputStringsConfig.min_line_length", "modulename": "input_strings.input_strings_config", "qualname": "InputStringsConfig.min_line_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"fullname": "input_strings.input_strings_config.InputStringsConfig.max_line_length", "modulename": "input_strings.input_strings_config", "qualname": "InputStringsConfig.max_line_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"fullname": "input_strings.input_strings_config.InputStringsConfig.validate_attributes", "modulename": "input_strings.input_strings_config", "qualname": "InputStringsConfig.validate_attributes", "kind": "function", "doc": "<p>Validates the following:\n    - max_line_length is greater than or equal to min_line_length.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"fullname": "input_strings.input_strings_config.InputStringsConfig.model_config", "modulename": "input_strings.input_strings_config", "qualname": "InputStringsConfig.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "scrambled_string_finder": {"fullname": "scrambled_string_finder", "modulename": "scrambled_string_finder", "kind": "module", "doc": "<p>Module for finding scrambled strings.</p>\n\n<p>This module defines the <code>ScrambledStringFinder</code> class, which identifies and counts\ndictionary words (including their scrambled versions) that appear as substrings\nin input strings.</p>\n"}, "scrambled_string_finder.ScrambledStringFinder": {"fullname": "scrambled_string_finder.ScrambledStringFinder", "modulename": "scrambled_string_finder", "qualname": "ScrambledStringFinder", "kind": "class", "doc": "<p>Class to find scrambled substrings in input strings.</p>\n\n<p>This class uses an <code>InputProvider</code> to fetch input strings and a <code>Dictionary</code> to fetch dictionary data.\nIt identifies dictionary words and their scrambled versions in the input strings.</p>\n"}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"fullname": "scrambled_string_finder.ScrambledStringFinder.__init__", "modulename": "scrambled_string_finder", "qualname": "ScrambledStringFinder.__init__", "kind": "function", "doc": "<p>Initializes the ScrambledStringFinder.</p>\n\n<p>Args:\n    input_provider (InputProvider): Instance of InputProvider to fetch input strings.\n    dictionary (Dictionary): Instance of Dictionary to fetch dictionary data.\n    logger (Logger): Logger.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_provider</span><span class=\"p\">:</span> <span class=\"n\">input_strings</span><span class=\"o\">.</span><span class=\"n\">input_provider</span><span class=\"o\">.</span><span class=\"n\">InputProvider</span>,</span><span class=\"param\">\t<span class=\"n\">dictionary</span><span class=\"p\">:</span> <span class=\"n\">dictionary</span><span class=\"o\">.</span><span class=\"n\">dictionary</span><span class=\"o\">.</span><span class=\"n\">Dictionary</span>,</span><span class=\"param\">\t<span class=\"n\">logger</span><span class=\"p\">:</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">Logger</span></span>)</span>"}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"fullname": "scrambled_string_finder.ScrambledStringFinder.input_provider", "modulename": "scrambled_string_finder", "qualname": "ScrambledStringFinder.input_provider", "kind": "variable", "doc": "<p></p>\n"}, "scrambled_string_finder.ScrambledStringFinder.dictionary": {"fullname": "scrambled_string_finder.ScrambledStringFinder.dictionary", "modulename": "scrambled_string_finder", "qualname": "ScrambledStringFinder.dictionary", "kind": "variable", "doc": "<p></p>\n"}, "scrambled_string_finder.ScrambledStringFinder.logger": {"fullname": "scrambled_string_finder.ScrambledStringFinder.logger", "modulename": "scrambled_string_finder", "qualname": "ScrambledStringFinder.logger", "kind": "variable", "doc": "<p></p>\n", "annotation": ": log.logger.Logger"}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"fullname": "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings", "modulename": "scrambled_string_finder", "qualname": "ScrambledStringFinder.find_scrambled_strings", "kind": "function", "doc": "<p>Finds scrambled substrings in the input strings.</p>\n\n<p>Returns:\n        List[Tuple[int, int]]: A list of tuples where each tuple contains:\n            - The index of the input string (1-based).\n            - The count of matched dictionary words (including scrambled versions).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "scrambled_strings": {"fullname": "scrambled_strings", "modulename": "scrambled_strings", "kind": "module", "doc": "<p>Main application.</p>\n"}, "scrambled_strings.check_arguments": {"fullname": "scrambled_strings.check_arguments", "modulename": "scrambled_strings", "qualname": "check_arguments", "kind": "function", "doc": "<p>Validates the provided command-line arguments.</p>\n\n<p>Args:\n    args (Namespace): Parsed command-line arguments.\n    logger (Logger): Logger for logging errors.</p>\n\n<p>Raises:\n    SystemExit: If any of the provided arguments are invalid.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">logger</span><span class=\"p\">:</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">Logger</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "scrambled_strings.parse_arguments": {"fullname": "scrambled_strings.parse_arguments", "modulename": "scrambled_strings", "qualname": "parse_arguments", "kind": "function", "doc": "<p>Parses command line arguments.</p>\n\n<p>Returns:\n    argparse.Namespace: An object containing the parsed command-line arguments.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "scrambled_strings.main": {"fullname": "scrambled_strings.main", "modulename": "scrambled_strings", "qualname": "main", "kind": "function", "doc": "<p>Main function to handle command-line arguments and orchestrate the program flow.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"config": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "config.config": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "config.config.Config": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 19}, "config.config.Config.model_config": {"qualname": 3, "fullname": 5, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "config.config_reader": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "config.config_reader.ConfigReader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "config.config_reader.ConfigReader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "config.config_reader.ConfigReader.get_config": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 76}, "config.config_utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "config.config_utils.print_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 29}, "config.tests": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "config.tests.test_config_reader": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "config.tests.test_config_reader.TestConfigReader": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 16}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 14}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 19}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 15}, "dictionary": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.dictionary": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "dictionary.dictionary.Dictionary": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "dictionary.dictionary.Dictionary.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 36}, "dictionary.dictionary.Dictionary.dictionary_config": {"qualname": 3, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.dictionary.Dictionary.total_length_of_all_words": {"qualname": 6, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.dictionary.Dictionary.dictionary_data_storage": {"qualname": 4, "fullname": 6, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.dictionary.Dictionary.logger": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.dictionary.Dictionary.add_word": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 48}, "dictionary.dictionary.Dictionary.load_from_file": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 72}, "dictionary.dictionary.Dictionary.get_all_words": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 22}, "dictionary.dictionary.Dictionary.get_canonical_word": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 33}, "dictionary.dictionary_config": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "dictionary.dictionary_config.DictionaryConfig": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 10}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"qualname": 7, "fullname": 10, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 30}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"qualname": 3, "fullname": 6, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "dictionary.dictionary_data_storage": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 22}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 20}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 34}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 23}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 54}, "dictionary.dictionary_errors": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "dictionary.dictionary_errors.DictionaryError": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 17}, "dictionary.dictionary_errors.DictionaryError.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "dictionary.dictionary_errors.DictionaryError.message": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.dictionary_utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "dictionary.dictionary_utils.compute_canonical_form": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 50}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 65}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 60}, "dictionary.hash_dictionary_storage": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 35}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 6}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 20}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 34}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 23}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 56}, "dictionary.set_dictionary_storage": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 49}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 6}, "dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 20}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 34}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 23}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 35}, "dictionary.tests": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dictionary.tests.test_dictionary": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "dictionary.tests.test_dictionary.TestDictionary": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 7}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 7}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 7}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"qualname": 7, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 9}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 9}, "dictionary.tests.test_dictionary_config": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"qualname": 9, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 17}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"qualname": 10, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 20}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "dictionary.tests.test_dictionary_utils": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 11}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "dictionary.tests.test_hash_dictionary_storage": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "dictionary.tests.test_set_dictionary_storage": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "log": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "log.log_config": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "log.log_config.LogConfig": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 10}, "log.log_config.LogConfig.log_file": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "log.log_config.LogConfig.log_max_bytes": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "log.log_config.LogConfig.log_backup_count": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "log.log_config.LogConfig.log_enable_console": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "log.log_config.LogConfig.log_level": {"qualname": 3, "fullname": 6, "annotation": 18, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "log.log_config.LogConfig.normalize_log_level": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "log.log_config.LogConfig.validate_log_file": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 14}, "log.log_config.LogConfig.model_config": {"qualname": 3, "fullname": 6, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "log.logger": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "log.logger.Logger": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 9}, "log.logger.Logger.info": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 18}, "log.logger.Logger.debug": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 18}, "log.logger.Logger.warning": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 18}, "log.logger.Logger.error": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 18}, "log.logger.Logger.critical": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 18}, "log.logger.Logger.always": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 18}, "log.standard_logger": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "log.standard_logger.StandardLogger": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 14}, "log.standard_logger.StandardLogger.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 54}, "log.standard_logger.StandardLogger.reset_instance": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 7}, "log.standard_logger.StandardLogger.info": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 7}, "log.standard_logger.StandardLogger.debug": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 7}, "log.standard_logger.StandardLogger.warning": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 7}, "log.standard_logger.StandardLogger.error": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 7}, "log.standard_logger.StandardLogger.critical": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 7}, "log.standard_logger.StandardLogger.always": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 7}, "log.tests": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "log.tests.test_log_config": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "log.tests.test_log_config.TestLogConfig": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "log.tests.test_standard_logger": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "log.tests.test_standard_logger.TestStandardLogger": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 14}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 12}, "tests": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tests.test_scrambled_string_finder": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "utils": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "utils.file_utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "utils.file_utils.create_parent_directories": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 14}, "utils.tests": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "utils.tests.test_file_utils": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "utils.tests.test_file_utils.TestFileUtils": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 10}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 12}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 16}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 15}, "input_strings": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "input_strings.input_file_provider": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "input_strings.input_file_provider.InputFileProvider": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 14}, "input_strings.input_file_provider.InputFileProvider.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 30}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"qualname": 4, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "input_strings.input_file_provider.InputFileProvider.inputs": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"qualname": 4, "fullname": 9, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "input_strings.input_file_provider.InputFileProvider.load": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 31}, "input_strings.input_file_provider.InputFileProvider.get": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 17}, "input_strings.input_provider": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "input_strings.input_provider.InputProvider": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 12}, "input_strings.input_provider.InputProvider.load": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 18}, "input_strings.input_provider.InputProvider.get": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 17}, "input_strings.input_string_errors": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "input_strings.input_string_errors.InputStringError": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 18}, "input_strings.input_string_errors.InputStringError.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "input_strings.input_string_errors.InputStringError.message": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "input_strings.input_strings_config": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "input_strings.input_strings_config.InputStringsConfig": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 11}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"qualname": 4, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"qualname": 4, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "scrambled_string_finder": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "scrambled_string_finder.ScrambledStringFinder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 46}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 35}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "scrambled_string_finder.ScrambledStringFinder.dictionary": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "scrambled_string_finder.ScrambledStringFinder.logger": {"qualname": 2, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 41}, "scrambled_strings": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "scrambled_strings.check_arguments": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 40}, "scrambled_strings.parse_arguments": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 21}, "scrambled_strings.main": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 15}}, "length": 200, "save": true}, "index": {"qualname": {"root": {"docs": {"config.config_reader.ConfigReader.__init__": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}}, "df": 9, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"config.config.Config": {"tf": 1}, "config.config.Config.model_config": {"tf": 1.4142135623730951}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.config_utils.print_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.dictionary.Dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 13, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"config.config_reader.ConfigReader": {"tf": 1}, "config.config_reader.ConfigReader.__init__": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"log.log_config.LogConfig.log_enable_console": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"log.log_config.LogConfig.log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 8}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"log.logger.Logger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scrambled_strings.check_arguments": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "log.log_config.LogConfig.log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}}, "df": 9}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrambled_strings.main": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_errors.DictionaryError.message": {"tf": 1}, "input_strings.input_string_errors.InputStringError.message": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"config.config_reader.ConfigReader.__init__": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}}, "df": 3}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"log.logger.Logger.info": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"log.standard_logger.StandardLogger.reset_instance": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "s": {"docs": {"input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_string_errors.InputStringError": {"tf": 1}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1}, "input_strings.input_string_errors.InputStringError.message": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_provider.InputProvider": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}}, "df": 17}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"config.config_utils.print_config": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrambled_string_finder.ScrambledStringFinder.input_provider": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrambled_strings.parse_arguments": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 45, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}}, "df": 10, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}}, "df": 8}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}}, "df": 8}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"utils.tests.test_file_utils.TestFileUtils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 4}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "log.log_config.LogConfig.log_file": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}}, "df": 1, "t": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"log.log_config.LogConfig.normalize_log_level": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"log.log_config.LogConfig.log_enable_console": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"log.logger.Logger.error": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {"dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"log.standard_logger.StandardLogger": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}}, "df": 9}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.dictionary": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary.Dictionary.dictionary_config": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.logger": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.dictionary": {"tf": 1}}, "df": 17, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary_config.DictionaryConfig": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}}, "df": 6}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}}, "df": 5}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError.message": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 4}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"log.logger.Logger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}}, "df": 15, "s": {"docs": {"dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"log.log_config.LogConfig.log_level": {"tf": 1}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"log.log_config.LogConfig.log_file": {"tf": 1}, "log.log_config.LogConfig.log_max_bytes": {"tf": 1}, "log.log_config.LogConfig.log_backup_count": {"tf": 1}, "log.log_config.LogConfig.log_enable_console": {"tf": 1}, "log.log_config.LogConfig.log_level": {"tf": 1}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}}, "df": 13, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary.Dictionary.logger": {"tf": 1}, "log.logger.Logger": {"tf": 1}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1}}, "df": 10}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"log.log_config.LogConfig": {"tf": 1}, "log.log_config.LogConfig.log_file": {"tf": 1}, "log.log_config.LogConfig.log_max_bytes": {"tf": 1}, "log.log_config.LogConfig.log_backup_count": {"tf": 1}, "log.log_config.LogConfig.log_enable_console": {"tf": 1}, "log.log_config.LogConfig.log_level": {"tf": 1}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}}, "df": 9}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}}, "df": 2}, "r": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}}, "df": 7}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrambled_strings.check_arguments": {"tf": 1}, "scrambled_strings.parse_arguments": {"tf": 1}}, "df": 2}}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 24, "s": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}}, "df": 9}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"log.logger.Logger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 7}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"log.standard_logger.StandardLogger.reset_instance": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"log.log_config.LogConfig.log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"log.log_config.LogConfig.log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}}, "df": 1}}}}}}}}}}, "fullname": {"root": {"docs": {"config.config_reader.ConfigReader.__init__": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}}, "df": 9, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"config": {"tf": 1}, "config.config": {"tf": 1.4142135623730951}, "config.config.Config": {"tf": 1.7320508075688772}, "config.config.Config.model_config": {"tf": 2}, "config.config_reader": {"tf": 1.4142135623730951}, "config.config_reader.ConfigReader": {"tf": 1.4142135623730951}, "config.config_reader.ConfigReader.__init__": {"tf": 1.4142135623730951}, "config.config_reader.ConfigReader.get_config": {"tf": 1.7320508075688772}, "config.config_utils": {"tf": 1.4142135623730951}, "config.config_utils.print_config": {"tf": 1.7320508075688772}, "config.tests": {"tf": 1}, "config.tests.test_config_reader": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1.7320508075688772}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "log.log_config": {"tf": 1}, "log.log_config.LogConfig": {"tf": 1}, "log.log_config.LogConfig.log_file": {"tf": 1}, "log.log_config.LogConfig.log_max_bytes": {"tf": 1}, "log.log_config.LogConfig.log_backup_count": {"tf": 1}, "log.log_config.LogConfig.log_enable_console": {"tf": 1}, "log.log_config.LogConfig.log_level": {"tf": 1}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1.4142135623730951}, "log.tests.test_log_config": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1.4142135623730951}}, "df": 60, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"config.config_reader.ConfigReader": {"tf": 1}, "config.config_reader.ConfigReader.__init__": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"log.log_config.LogConfig.log_enable_console": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"log.log_config.LogConfig.log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 8}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"log.logger.Logger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scrambled_strings.check_arguments": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "log.log_config.LogConfig.log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}}, "df": 9}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrambled_strings.main": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_errors.DictionaryError.message": {"tf": 1}, "input_strings.input_string_errors.InputStringError.message": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"config.config_reader": {"tf": 1}, "config.config_reader.ConfigReader": {"tf": 1}, "config.config_reader.ConfigReader.__init__": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}}, "df": 10}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"log.standard_logger.StandardLogger.reset_instance": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"config.config_reader.ConfigReader.__init__": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}}, "df": 3}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"log.logger.Logger.info": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"log.standard_logger.StandardLogger.reset_instance": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"input_strings": {"tf": 1}, "input_strings.input_file_provider": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1.7320508075688772}, "input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1.7320508075688772}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1.4142135623730951}, "input_strings.input_provider": {"tf": 1.4142135623730951}, "input_strings.input_provider.InputProvider": {"tf": 1.4142135623730951}, "input_strings.input_provider.InputProvider.load": {"tf": 1.4142135623730951}, "input_strings.input_provider.InputProvider.get": {"tf": 1.4142135623730951}, "input_strings.input_string_errors": {"tf": 1.4142135623730951}, "input_strings.input_string_errors.InputStringError": {"tf": 1.4142135623730951}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1.4142135623730951}, "input_strings.input_string_errors.InputStringError.message": {"tf": 1.4142135623730951}, "input_strings.input_strings_config": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"tf": 1}}, "df": 24, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "s": {"docs": {"input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_string_errors.InputStringError": {"tf": 1}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1}, "input_strings.input_string_errors.InputStringError.message": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_provider.InputProvider": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}}, "df": 17}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"config.config_utils": {"tf": 1}, "config.config_utils.print_config": {"tf": 1}, "dictionary.dictionary_utils": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "utils": {"tf": 1}, "utils.file_utils": {"tf": 1.4142135623730951}, "utils.file_utils.create_parent_directories": {"tf": 1.4142135623730951}, "utils.tests": {"tf": 1}, "utils.tests.test_file_utils": {"tf": 1.4142135623730951}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1.4142135623730951}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1.4142135623730951}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1.4142135623730951}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1.4142135623730951}}, "df": 20}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"config.config_utils.print_config": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_file_provider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"tf": 1}}, "df": 13}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrambled_strings.parse_arguments": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"config.tests.test_config_reader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_utils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.tests.test_hash_dictionary_storage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1.4142135623730951}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_set_dictionary_storage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1.4142135623730951}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1.4142135623730951}, "log.tests.test_log_config": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1.4142135623730951}, "log.tests.test_standard_logger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1.4142135623730951}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1.4142135623730951}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1.4142135623730951}, "tests.test_scrambled_string_finder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1.4142135623730951}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1.4142135623730951}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1.4142135623730951}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1.4142135623730951}, "utils.tests.test_file_utils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1.4142135623730951}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1.4142135623730951}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1.4142135623730951}}, "df": 70, "s": {"docs": {"config.tests": {"tf": 1}, "config.tests.test_config_reader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.tests": {"tf": 1}, "dictionary.tests.test_dictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "dictionary.tests.test_dictionary_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "dictionary.tests.test_dictionary_utils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}, "log.tests": {"tf": 1}, "log.tests.test_log_config": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "log.tests.test_standard_logger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "tests": {"tf": 1}, "tests.test_scrambled_string_finder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "utils.tests": {"tf": 1}, "utils.tests.test_file_utils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 75, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}}, "df": 10, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}}, "df": 8}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}}, "df": 8}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"utils.tests.test_file_utils.TestFileUtils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 4}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "log.log_config.LogConfig.log_file": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "utils.file_utils": {"tf": 1}, "utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}, "input_strings.input_file_provider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}}, "df": 23}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"tests.test_scrambled_string_finder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.dictionary": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 14}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}}, "df": 1, "t": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"log.log_config.LogConfig.normalize_log_level": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"log.logger.Logger.error": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 3, "s": {"docs": {"dictionary.dictionary_errors": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError.message": {"tf": 1}, "input_strings.input_string_errors": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1}, "input_strings.input_string_errors.InputStringError.message": {"tf": 1}}, "df": 8}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"log.log_config.LogConfig.log_enable_console": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"dictionary.set_dictionary_storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 15, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {"dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 37}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"log.standard_logger": {"tf": 1}, "log.standard_logger.StandardLogger": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}, "log.tests.test_standard_logger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 16, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"log.standard_logger.StandardLogger": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}}, "df": 9}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tests.test_scrambled_string_finder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "input_strings.input_string_errors": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1}, "input_strings.input_string_errors.InputStringError.message": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.dictionary": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 18, "s": {"docs": {"input_strings": {"tf": 1}, "input_strings.input_file_provider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}, "input_strings.input_string_errors": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1}, "input_strings.input_string_errors.InputStringError.message": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}, "scrambled_strings": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}, "scrambled_strings.parse_arguments": {"tf": 1}, "scrambled_strings.main": {"tf": 1}}, "df": 28}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tests.test_scrambled_string_finder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1.4142135623730951}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.dictionary": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1.4142135623730951}, "scrambled_strings": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}, "scrambled_strings.parse_arguments": {"tf": 1}, "scrambled_strings.main": {"tf": 1}}, "df": 18, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.dictionary": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dictionary": {"tf": 1}, "dictionary.dictionary": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.dictionary_config": {"tf": 2}, "dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 2}, "dictionary.dictionary.Dictionary.logger": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1.7320508075688772}, "dictionary.dictionary_config": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_errors": {"tf": 1.4142135623730951}, "dictionary.dictionary_errors.DictionaryError": {"tf": 1.4142135623730951}, "dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 1.4142135623730951}, "dictionary.dictionary_errors.DictionaryError.message": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.tests": {"tf": 1}, "dictionary.tests.test_dictionary": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_utils": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.tests.test_hash_dictionary_storage": {"tf": 1.4142135623730951}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1.4142135623730951}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1.4142135623730951}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1.4142135623730951}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_set_dictionary_storage": {"tf": 1.4142135623730951}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1.4142135623730951}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1.4142135623730951}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1.4142135623730951}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1.4142135623730951}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.dictionary": {"tf": 1}}, "df": 89, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary_config.DictionaryConfig": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}}, "df": 6}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}}, "df": 5}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError.message": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 4}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}}, "df": 7}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"log.logger.Logger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}}, "df": 15, "s": {"docs": {"dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"log.log_config.LogConfig.log_level": {"tf": 1}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"log": {"tf": 1}, "log.log_config": {"tf": 1.4142135623730951}, "log.log_config.LogConfig": {"tf": 1.4142135623730951}, "log.log_config.LogConfig.log_file": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.log_max_bytes": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.log_backup_count": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.log_enable_console": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.log_level": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.validate_log_file": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.model_config": {"tf": 1.4142135623730951}, "log.logger": {"tf": 1}, "log.logger.Logger": {"tf": 1}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger": {"tf": 1}, "log.standard_logger.StandardLogger": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}, "log.tests": {"tf": 1}, "log.tests.test_log_config": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1.7320508075688772}, "log.tests.test_standard_logger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 45, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary.Dictionary.logger": {"tf": 1}, "log.logger": {"tf": 1}, "log.logger.Logger": {"tf": 1.4142135623730951}, "log.logger.Logger.info": {"tf": 1.4142135623730951}, "log.logger.Logger.debug": {"tf": 1.4142135623730951}, "log.logger.Logger.warning": {"tf": 1.4142135623730951}, "log.logger.Logger.error": {"tf": 1.4142135623730951}, "log.logger.Logger.critical": {"tf": 1.4142135623730951}, "log.logger.Logger.always": {"tf": 1.4142135623730951}, "log.standard_logger": {"tf": 1}, "log.standard_logger.StandardLogger": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}, "log.tests.test_standard_logger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1.4142135623730951}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1}}, "df": 26}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"log.log_config.LogConfig": {"tf": 1}, "log.log_config.LogConfig.log_file": {"tf": 1}, "log.log_config.LogConfig.log_max_bytes": {"tf": 1}, "log.log_config.LogConfig.log_backup_count": {"tf": 1}, "log.log_config.LogConfig.log_enable_console": {"tf": 1}, "log.log_config.LogConfig.log_level": {"tf": 1}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}}, "df": 9}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}}, "df": 2}, "r": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}}, "df": 7}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrambled_strings.check_arguments": {"tf": 1}, "scrambled_strings.parse_arguments": {"tf": 1}}, "df": 2}}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 24, "s": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}}, "df": 9}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"log.logger.Logger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 7}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 15, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"log.log_config.LogConfig.log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"log.log_config.LogConfig.log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}}, "df": 1}}}}}}}}}}, "annotation": {"root": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary.Dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary.Dictionary.logger": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"tf": 1}, "log.log_config.LogConfig.log_file": {"tf": 1}, "log.log_config.LogConfig.log_max_bytes": {"tf": 1}, "log.log_config.LogConfig.log_backup_count": {"tf": 1}, "log.log_config.LogConfig.log_enable_console": {"tf": 1}, "log.log_config.LogConfig.log_level": {"tf": 1.4142135623730951}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1}}, "df": 24, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary.Dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 6, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 4}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"log.log_config.LogConfig.log_level": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.dictionary.Dictionary.dictionary_config": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1.4142135623730951}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary.Dictionary.dictionary_config": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"log.log_config.LogConfig.log_level": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1}, "log.log_config.LogConfig.log_max_bytes": {"tf": 1}, "log.log_config.LogConfig.log_backup_count": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1}}, "df": 8}, "f": {"docs": {}, "df": 0, "o": {"docs": {"log.log_config.LogConfig.log_level": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"tf": 1}, "log.log_config.LogConfig.log_file": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary.Dictionary.logger": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary.Dictionary.logger": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"log.log_config.LogConfig.log_level": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"log.log_config.LogConfig.log_enable_console": {"tf": 1}}, "df": 1}}}}, "x": {"2": {"7": {"docs": {"log.log_config.LogConfig.log_level": {"tf": 3.1622776601683795}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"log.log_config.LogConfig.log_level": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"log.log_config.LogConfig.log_level": {"tf": 1}}, "df": 1}}}}}}}}}, "default_value": {"root": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 4}}, "signature": {"root": {"docs": {"config.config_reader.ConfigReader.__init__": {"tf": 3.4641016151377544}, "config.config_reader.ConfigReader.get_config": {"tf": 7.211102550927978}, "config.config_utils.print_config": {"tf": 5.656854249492381}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 3.7416573867739413}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 4.242640687119285}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 4.69041575982343}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 5.0990195135927845}, "dictionary.dictionary.Dictionary.__init__": {"tf": 7.416198487095663}, "dictionary.dictionary.Dictionary.add_word": {"tf": 4.47213595499958}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 4.47213595499958}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 4.123105625617661}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 4.47213595499958}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 3.1622776601683795}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 4.47213595499958}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 4.47213595499958}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 4.123105625617661}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 4.47213595499958}, "dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 2.8284271247461903}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 4}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 5.656854249492381}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 4.898979485566356}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 2}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 4.47213595499958}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 4.47213595499958}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 4.123105625617661}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 4.47213595499958}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 2}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 4.47213595499958}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 4.47213595499958}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 4.123105625617661}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 4.47213595499958}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 5.291502622129181}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 4.242640687119285}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 4.242640687119285}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 3.1622776601683795}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 3.1622776601683795}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 3.1622776601683795}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 3.1622776601683795}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 3.1622776601683795}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 3.1622776601683795}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 3.1622776601683795}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 3.1622776601683795}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 3.1622776601683795}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 3.1622776601683795}, "log.log_config.LogConfig.normalize_log_level": {"tf": 4.47213595499958}, "log.log_config.LogConfig.validate_log_file": {"tf": 4.47213595499958}, "log.logger.Logger.info": {"tf": 4.47213595499958}, "log.logger.Logger.debug": {"tf": 4.47213595499958}, "log.logger.Logger.warning": {"tf": 4.47213595499958}, "log.logger.Logger.error": {"tf": 4.47213595499958}, "log.logger.Logger.critical": {"tf": 4.47213595499958}, "log.logger.Logger.always": {"tf": 4.47213595499958}, "log.standard_logger.StandardLogger.__init__": {"tf": 5.291502622129181}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 3.1622776601683795}, "log.standard_logger.StandardLogger.info": {"tf": 4.47213595499958}, "log.standard_logger.StandardLogger.debug": {"tf": 4.47213595499958}, "log.standard_logger.StandardLogger.warning": {"tf": 4.47213595499958}, "log.standard_logger.StandardLogger.error": {"tf": 4.47213595499958}, "log.standard_logger.StandardLogger.critical": {"tf": 4.47213595499958}, "log.standard_logger.StandardLogger.always": {"tf": 4.47213595499958}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 3.1622776601683795}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 3.1622776601683795}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 3.1622776601683795}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 3.1622776601683795}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 3.1622776601683795}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 3.1622776601683795}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 3.1622776601683795}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 3.1622776601683795}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 4.47213595499958}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 4.242640687119285}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 4.47213595499958}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 3.1622776601683795}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 3.1622776601683795}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 3.1622776601683795}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 3.1622776601683795}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 3.1622776601683795}, "utils.file_utils.create_parent_directories": {"tf": 4}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 3.7416573867739413}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 3.7416573867739413}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 3.7416573867739413}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 5.477225575051661}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 3.4641016151377544}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 4.123105625617661}, "input_strings.input_provider.InputProvider.load": {"tf": 3.4641016151377544}, "input_strings.input_provider.InputProvider.get": {"tf": 4.123105625617661}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 2.8284271247461903}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 3.1622776601683795}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 7.416198487095663}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 5}, "scrambled_strings.check_arguments": {"tf": 5.291502622129181}, "scrambled_strings.parse_arguments": {"tf": 2.6457513110645907}, "scrambled_strings.main": {"tf": 2.6457513110645907}}, "df": 106, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"config.config_reader.ConfigReader.__init__": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 2.6457513110645907}, "config.config_utils.print_config": {"tf": 2.23606797749979}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1.4142135623730951}, "log.standard_logger.StandardLogger.__init__": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"config.config_reader.ConfigReader.__init__": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"config.config_reader.ConfigReader.__init__": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "utils.file_utils.create_parent_directories": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"config.config_reader.ConfigReader.__init__": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.config_utils.print_config": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1.4142135623730951}, "log.log_config.LogConfig.validate_log_file": {"tf": 1.4142135623730951}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}, "utils.file_utils.create_parent_directories": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}}, "df": 40, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1.7320508075688772}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 86}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}}, "df": 2, "s": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {"dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"config.config_utils.print_config": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"config.config_utils.print_config": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}, "utils.file_utils.create_parent_directories": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 24}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1.7320508075688772}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 2}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1.4142135623730951}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1.4142135623730951}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 12}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 1}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1}}, "df": 14}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}}, "df": 2}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}}, "df": 6}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1.4142135623730951}}, "df": 3}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 2}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 2.23606797749979}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1.7320508075688772}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 2}}, "df": 4, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}}, "df": 2}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1.7320508075688772}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 4, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1.7320508075688772}, "scrambled_strings.check_arguments": {"tf": 1.7320508075688772}}, "df": 7}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"log.standard_logger.StandardLogger.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 3}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1.7320508075688772}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 13}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"scrambled_strings.check_arguments": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 3}}}}}, "bases": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"config.config.Config": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_file_provider.InputFileProvider": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"config.config.Config": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"config.config.Config": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}}, "df": 10}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}}, "df": 10}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary_config.DictionaryConfig": {"tf": 1.7320508075688772}, "log.log_config.LogConfig": {"tf": 1.7320508075688772}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}}, "df": 10}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1.4142135623730951}, "log.logger.Logger": {"tf": 1.4142135623730951}, "input_strings.input_provider.InputProvider": {"tf": 1.4142135623730951}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"input_strings.input_file_provider.InputFileProvider": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"log.standard_logger.StandardLogger": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"log.standard_logger.StandardLogger": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"input_strings.input_file_provider.InputFileProvider": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_file_provider.InputFileProvider": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}}, "df": 2}, "1": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1}, "docs": {"config": {"tf": 1.7320508075688772}, "config.config": {"tf": 1.7320508075688772}, "config.config.Config": {"tf": 1.7320508075688772}, "config.config.Config.model_config": {"tf": 2}, "config.config_reader": {"tf": 1.7320508075688772}, "config.config_reader.ConfigReader": {"tf": 2.449489742783178}, "config.config_reader.ConfigReader.__init__": {"tf": 1.7320508075688772}, "config.config_reader.ConfigReader.get_config": {"tf": 3.7416573867739413}, "config.config_utils": {"tf": 1.7320508075688772}, "config.config_utils.print_config": {"tf": 2.8284271247461903}, "config.tests": {"tf": 1.7320508075688772}, "config.tests.test_config_reader": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader": {"tf": 1.7320508075688772}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1.7320508075688772}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1.7320508075688772}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1.7320508075688772}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1.7320508075688772}, "dictionary": {"tf": 1.7320508075688772}, "dictionary.dictionary": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary": {"tf": 2.449489742783178}, "dictionary.dictionary.Dictionary.__init__": {"tf": 3}, "dictionary.dictionary.Dictionary.dictionary_config": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.total_length_of_all_words": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.dictionary_data_storage": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.logger": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.add_word": {"tf": 3.1622776601683795}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 3}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 2.449489742783178}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 3.1622776601683795}, "dictionary.dictionary_config": {"tf": 1.7320508075688772}, "dictionary.dictionary_config.DictionaryConfig": {"tf": 1.7320508075688772}, "dictionary.dictionary_config.DictionaryConfig.min_word_length": {"tf": 1.7320508075688772}, "dictionary.dictionary_config.DictionaryConfig.max_word_length": {"tf": 1.7320508075688772}, "dictionary.dictionary_config.DictionaryConfig.max_sum_lengths_of_all_words": {"tf": 1.7320508075688772}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 2}, "dictionary.dictionary_data_storage": {"tf": 1.7320508075688772}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1.7320508075688772}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 2.6457513110645907}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 3.1622776601683795}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 2.449489742783178}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 3.605551275463989}, "dictionary.dictionary_errors": {"tf": 1.7320508075688772}, "dictionary.dictionary_errors.DictionaryError": {"tf": 2.23606797749979}, "dictionary.dictionary_errors.DictionaryError.__init__": {"tf": 1.7320508075688772}, "dictionary.dictionary_errors.DictionaryError.message": {"tf": 1.7320508075688772}, "dictionary.dictionary_utils": {"tf": 1.7320508075688772}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 3.605551275463989}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 3.4641016151377544}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 3.3166247903554}, "dictionary.hash_dictionary_storage": {"tf": 1.7320508075688772}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 2.449489742783178}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1.7320508075688772}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.storage": {"tf": 1.7320508075688772}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 2.6457513110645907}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 3.1622776601683795}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 2.449489742783178}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 3.605551275463989}, "dictionary.set_dictionary_storage": {"tf": 1.7320508075688772}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 2.449489742783178}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1.7320508075688772}, "dictionary.set_dictionary_storage.SetDictionaryStorage.storage": {"tf": 1.7320508075688772}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 2.6457513110645907}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 3.1622776601683795}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 2.449489742783178}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 3.1622776601683795}, "dictionary.tests": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_utils": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1.7320508075688772}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1.7320508075688772}, "dictionary.tests.test_hash_dictionary_storage": {"tf": 1.7320508075688772}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1.7320508075688772}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1.7320508075688772}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1.7320508075688772}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1.7320508075688772}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1.7320508075688772}, "dictionary.tests.test_set_dictionary_storage": {"tf": 1.7320508075688772}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1.7320508075688772}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1.7320508075688772}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1.7320508075688772}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1.7320508075688772}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1.7320508075688772}, "log": {"tf": 1.7320508075688772}, "log.log_config": {"tf": 1.7320508075688772}, "log.log_config.LogConfig": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.log_file": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.log_max_bytes": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.log_backup_count": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.log_enable_console": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.log_level": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.validate_log_file": {"tf": 1.7320508075688772}, "log.log_config.LogConfig.model_config": {"tf": 2}, "log.logger": {"tf": 2.8284271247461903}, "log.logger.Logger": {"tf": 1.7320508075688772}, "log.logger.Logger.info": {"tf": 2.6457513110645907}, "log.logger.Logger.debug": {"tf": 2.6457513110645907}, "log.logger.Logger.warning": {"tf": 2.6457513110645907}, "log.logger.Logger.error": {"tf": 2.6457513110645907}, "log.logger.Logger.critical": {"tf": 2.6457513110645907}, "log.logger.Logger.always": {"tf": 2.6457513110645907}, "log.standard_logger": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger.__init__": {"tf": 3.3166247903554}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger.info": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger.debug": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger.warning": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger.error": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger.critical": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger.always": {"tf": 1.7320508075688772}, "log.tests": {"tf": 1.7320508075688772}, "log.tests.test_log_config": {"tf": 1.4142135623730951}, "log.tests.test_log_config.TestLogConfig": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1.7320508075688772}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1.7320508075688772}, "log.tests.test_standard_logger": {"tf": 1.4142135623730951}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1.7320508075688772}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1.7320508075688772}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1.7320508075688772}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1.7320508075688772}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1.7320508075688772}, "tests": {"tf": 1.7320508075688772}, "tests.test_scrambled_string_finder": {"tf": 1.7320508075688772}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1.7320508075688772}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1.7320508075688772}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1.7320508075688772}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1.7320508075688772}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1.7320508075688772}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1.7320508075688772}, "utils": {"tf": 1.7320508075688772}, "utils.file_utils": {"tf": 1.7320508075688772}, "utils.file_utils.create_parent_directories": {"tf": 1.7320508075688772}, "utils.tests": {"tf": 1.7320508075688772}, "utils.tests.test_file_utils": {"tf": 1.7320508075688772}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1.7320508075688772}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1.7320508075688772}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1.7320508075688772}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1.7320508075688772}, "input_strings": {"tf": 1.7320508075688772}, "input_strings.input_file_provider": {"tf": 1.7320508075688772}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1.7320508075688772}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 2.8284271247461903}, "input_strings.input_file_provider.InputFileProvider.input_file_path": {"tf": 1.7320508075688772}, "input_strings.input_file_provider.InputFileProvider.inputs": {"tf": 1.7320508075688772}, "input_strings.input_file_provider.InputFileProvider.input_strings_config": {"tf": 1.7320508075688772}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 2.449489742783178}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 2.449489742783178}, "input_strings.input_provider": {"tf": 1.7320508075688772}, "input_strings.input_provider.InputProvider": {"tf": 1.7320508075688772}, "input_strings.input_provider.InputProvider.load": {"tf": 2.449489742783178}, "input_strings.input_provider.InputProvider.get": {"tf": 2.449489742783178}, "input_strings.input_string_errors": {"tf": 1.7320508075688772}, "input_strings.input_string_errors.InputStringError": {"tf": 2.23606797749979}, "input_strings.input_string_errors.InputStringError.__init__": {"tf": 1.7320508075688772}, "input_strings.input_string_errors.InputStringError.message": {"tf": 1.7320508075688772}, "input_strings.input_strings_config": {"tf": 1.7320508075688772}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1.7320508075688772}, "input_strings.input_strings_config.InputStringsConfig.min_line_length": {"tf": 1.7320508075688772}, "input_strings.input_strings_config.InputStringsConfig.max_line_length": {"tf": 1.7320508075688772}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1.7320508075688772}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 2}, "scrambled_string_finder": {"tf": 2.8284271247461903}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 3.1622776601683795}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 3}, "scrambled_string_finder.ScrambledStringFinder.input_provider": {"tf": 1.7320508075688772}, "scrambled_string_finder.ScrambledStringFinder.dictionary": {"tf": 1.7320508075688772}, "scrambled_string_finder.ScrambledStringFinder.logger": {"tf": 1.7320508075688772}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 2.449489742783178}, "scrambled_strings": {"tf": 1.7320508075688772}, "scrambled_strings.check_arguments": {"tf": 3.3166247903554}, "scrambled_strings.parse_arguments": {"tf": 2.449489742783178}, "scrambled_strings.main": {"tf": 1.7320508075688772}}, "df": 200, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"config.config": {"tf": 1}, "config.config_reader": {"tf": 1}, "config.config_utils": {"tf": 1}, "dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary_errors": {"tf": 1}, "log.log_config": {"tf": 1}, "log.standard_logger": {"tf": 1}, "utils.file_utils": {"tf": 1}, "input_strings.input_string_errors": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}}, "df": 10}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"config.config.Config": {"tf": 1}, "config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 5}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"config.config.Config": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1}}, "df": 2}, "d": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1.4142135623730951}}, "df": 2}, "r": {"docs": {"scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"input_strings.input_provider": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}}, "df": 3}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scrambled_strings.main": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"config.config_utils.print_config": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1, "d": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 2}, "s": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrambled_strings.check_arguments": {"tf": 1}, "scrambled_strings.parse_arguments": {"tf": 1}}, "df": 2}, "s": {"docs": {"scrambled_strings.parse_arguments": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"config.config": {"tf": 1}, "config.config_reader": {"tf": 1}, "config.config_utils": {"tf": 1}, "dictionary.dictionary": {"tf": 1}, "dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary_errors": {"tf": 1}, "dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.set_dictionary_storage": {"tf": 1}, "log.log_config": {"tf": 1}, "log.logger": {"tf": 1}, "log.standard_logger": {"tf": 1}, "utils.file_utils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}, "input_strings.input_provider": {"tf": 1}, "input_strings.input_string_errors": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}, "scrambled_string_finder": {"tf": 1.4142135623730951}}, "df": 18}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1}, "log.log_config": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "log.log_config.LogConfig": {"tf": 1}, "log.standard_logger.StandardLogger": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"utils.file_utils": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1.7320508075688772}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}}, "df": 3}, "d": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrambled_strings": {"tf": 1}, "scrambled_strings.main": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}}, "df": 1, "s": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "log.logger.Logger.info": {"tf": 1.7320508075688772}, "log.logger.Logger.debug": {"tf": 1.7320508075688772}, "log.logger.Logger.warning": {"tf": 1.7320508075688772}, "log.logger.Logger.error": {"tf": 1.7320508075688772}, "log.logger.Logger.critical": {"tf": 1.7320508075688772}, "log.logger.Logger.always": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}}, "df": 14}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"log.standard_logger.StandardLogger.__init__": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"config.config": {"tf": 1}, "config.config_reader": {"tf": 1}, "config.config_reader.ConfigReader": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.config_utils": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig": {"tf": 1}, "dictionary.dictionary_errors": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "log.log_config": {"tf": 1}, "log.log_config.LogConfig": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.standard_logger": {"tf": 1}, "log.standard_logger.StandardLogger": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "utils.file_utils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}, "input_strings.input_string_errors": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "scrambled_string_finder": {"tf": 1}}, "df": 53}, "n": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 2}}, "e": {"docs": {"config.config.Config": {"tf": 1}, "config.config.Config.model_config": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 3.3166247903554}, "config.config_utils.print_config": {"tf": 2}, "config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.add_word": {"tf": 2}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 2.449489742783178}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 2.23606797749979}, "dictionary.dictionary_config": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 2}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 2.6457513110645907}, "dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 2.6457513110645907}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 2.449489742783178}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 2.449489742783178}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 2}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 2.8284271247461903}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 2}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 2.23606797749979}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "log.log_config": {"tf": 1}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "log.logger": {"tf": 1}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 2.449489742783178}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1.4142135623730951}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1.7320508075688772}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1.4142135623730951}, "input_strings.input_provider.InputProvider.get": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 2}, "scrambled_strings.check_arguments": {"tf": 1.4142135623730951}, "scrambled_strings.parse_arguments": {"tf": 1}, "scrambled_strings.main": {"tf": 1}}, "df": 84, "m": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}}, "df": 4}}, "y": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1.4142135623730951}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}}, "df": 6}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"config.config": {"tf": 1}, "config.config.Config": {"tf": 1}}, "df": 2}, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1.7320508075688772}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1.4142135623730951}, "scrambled_strings.main": {"tf": 1}}, "df": 33, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 2.23606797749979}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"config.tests.test_config_reader": {"tf": 1}, "dictionary.tests.test_dictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "dictionary.tests.test_dictionary_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "dictionary.tests.test_dictionary_utils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}, "log.tests.test_log_config": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "log.tests.test_standard_logger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "tests.test_scrambled_string_finder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "utils.tests.test_file_utils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 53, "s": {"docs": {"config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}}, "df": 14}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1, "s": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"config.config": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"config.config.Config": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 2}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {"dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}}, "df": 13, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.config_utils.print_config": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}}, "df": 23, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"log.log_config.LogConfig.validate_log_file": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 3, "s": {"docs": {"input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1.4142135623730951}, "input_strings.input_provider.InputProvider.get": {"tf": 1.4142135623730951}, "input_strings.input_string_errors": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "scrambled_string_finder": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1.7320508075688772}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 11}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1.7320508075688772}, "dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}}, "df": 20}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1, "s": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}}, "df": 1}, "d": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"log.tests.test_standard_logger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}}, "df": 1}}, "m": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}}, "df": 3}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 3}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "scrambled_string_finder": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tests.test_scrambled_string_finder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"log.logger": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"log.standard_logger.StandardLogger.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"log.standard_logger.StandardLogger": {"tf": 1}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrambled_strings.check_arguments": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {"config.config": {"tf": 1}, "config.config.Config.model_config": {"tf": 1}, "config.config_reader": {"tf": 1}, "config.config_reader.ConfigReader": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "dictionary.dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "utils.file_utils.create_parent_directories": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 56, "s": {"docs": {"config.config": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}, "scrambled_string_finder": {"tf": 1}}, "df": 6}, "l": {"docs": {}, "df": 0, "l": {"docs": {"config.config": {"tf": 1}, "config.config.Config": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}}, "df": 15, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 2}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}}, "df": 3}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1.4142135623730951}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_strings.parse_arguments": {"tf": 1}}, "df": 25, "d": {"docs": {"config.config.Config": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1.4142135623730951}, "scrambled_strings.main": {"tf": 1}}, "df": 19}, "y": {"docs": {"scrambled_strings.check_arguments": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.config_utils.print_config": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1.4142135623730951}}, "df": 27}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrambled_strings.check_arguments": {"tf": 1.7320508075688772}, "scrambled_strings.parse_arguments": {"tf": 1.4142135623730951}, "scrambled_strings.main": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrambled_strings.parse_arguments": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 8}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"config.config_utils.print_config": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "log.logger": {"tf": 1}, "log.logger.Logger": {"tf": 1}, "input_strings.input_provider": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"log.logger": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"log.log_config.LogConfig.normalize_log_level": {"tf": 1}}, "df": 1, "s": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.tests.test_dictionary_config": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"log.standard_logger.StandardLogger": {"tf": 1}, "scrambled_strings": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scrambled_string_finder": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"config.config": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"config.config.Config": {"tf": 1}, "log.logger.Logger": {"tf": 1}}, "df": 2, "d": {"docs": {"input_strings.input_file_provider": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "x": {"docs": {"config.config.Config": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"config.config.Config.model_config": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 6, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_singleton_behavior": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"config.config": {"tf": 1}, "config.config.Config": {"tf": 1}, "config.config.Config.model_config": {"tf": 1}, "config.config_reader": {"tf": 1}, "config.config_reader.ConfigReader": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.config_utils": {"tf": 1}, "config.tests.test_config_reader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "dictionary.dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1.4142135623730951}, "dictionary.dictionary_errors": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "dictionary.dictionary_utils": {"tf": 1}, "dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_dictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "dictionary.tests.test_dictionary_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_dictionary_utils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}, "log.log_config": {"tf": 1}, "log.log_config.LogConfig": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "log.logger": {"tf": 1.4142135623730951}, "log.logger.Logger": {"tf": 1}, "log.standard_logger": {"tf": 1}, "log.standard_logger.StandardLogger": {"tf": 1}, "log.tests.test_log_config": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_standard_logger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "tests.test_scrambled_string_finder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "utils.file_utils": {"tf": 1}, "utils.tests.test_file_utils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_provider": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}, "input_strings.input_string_errors": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 74, "m": {"docs": {"dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1.7320508075688772}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1.7320508075688772}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 2}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"config.config_reader": {"tf": 1}, "config.config_reader.ConfigReader": {"tf": 1.4142135623730951}, "config.config_reader.ConfigReader.get_config": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "utils.file_utils": {"tf": 1}, "utils.tests.test_file_utils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}, "input_strings.input_file_provider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1.4142135623730951}}, "df": 18, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"config.config_reader.ConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrambled_string_finder.ScrambledStringFinder": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrambled_string_finder": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrambled_string_finder.ScrambledStringFinder": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "scrambled_strings.main": {"tf": 1}}, "df": 2, "s": {"docs": {"config.config_utils": {"tf": 1}, "dictionary.dictionary_utils": {"tf": 1}, "dictionary.tests.test_dictionary_utils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "utils.file_utils": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"log.standard_logger": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "log.logger": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"scrambled_strings.main": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"config.config.Config.model_config": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1.7320508075688772}, "config.config_utils.print_config": {"tf": 1.7320508075688772}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 12, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"config.config": {"tf": 1}, "config.config.Config": {"tf": 1}, "config.config.Config.model_config": {"tf": 1}, "config.config_reader": {"tf": 1}, "config.config_reader.ConfigReader": {"tf": 1.4142135623730951}, "config.config_reader.ConfigReader.get_config": {"tf": 2.6457513110645907}, "config.config_utils": {"tf": 1}, "config.config_utils.print_config": {"tf": 2}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "log.log_config": {"tf": 1}, "log.log_config.LogConfig": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 22}}}}}, "e": {"docs": {"log.standard_logger.StandardLogger.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"config.config.Config.model_config": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1.4142135623730951}, "log.log_config.LogConfig.model_config": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1.4142135623730951}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"config.tests.test_config_reader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}}, "df": 1, "s": {"docs": {"config.config_utils": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_errors": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "input_strings.input_string_errors": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 9}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "scrambled_strings.parse_arguments": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"log.log_config.LogConfig.normalize_log_level": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"input_strings.input_file_provider": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}}, "df": 10}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 2, "s": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 2}, "d": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrambled_strings.check_arguments": {"tf": 1.4142135623730951}, "scrambled_strings.parse_arguments": {"tf": 1.4142135623730951}, "scrambled_strings.main": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_scrambled_matches": {"tf": 1}}, "df": 2}}, "s": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "scrambled_string_finder": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"config.config.Config": {"tf": 1}, "config.config_reader.ConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "log.log_config.LogConfig": {"tf": 1}, "log.logger.Logger": {"tf": 1}, "log.standard_logger.StandardLogger": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1.4142135623730951}}, "df": 22}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}}, "df": 1, "s": {"docs": {"config.tests.test_config_reader": {"tf": 1}, "dictionary.tests.test_dictionary": {"tf": 1}, "dictionary.tests.test_dictionary_config": {"tf": 1}, "dictionary.tests.test_dictionary_utils": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage": {"tf": 1}, "log.tests.test_log_config": {"tf": 1}, "log.tests.test_standard_logger": {"tf": 1}, "tests.test_scrambled_string_finder": {"tf": 1}, "utils.tests.test_file_utils": {"tf": 1}}, "df": 10}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 2}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1.7320508075688772}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 2}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_compute_canonical_form": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 4}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"input_strings.input_provider.InputProvider.load": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}}, "df": 1, "s": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dictionary.dictionary_errors": {"tf": 1}, "input_strings.input_string_errors": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"log.logger.Logger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1.4142135623730951}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 3, "s": {"docs": {"log.standard_logger.StandardLogger.__init__": {"tf": 1}, "utils.file_utils.create_parent_directories": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"config.config.Config": {"tf": 1}, "dictionary.dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "input_strings.input_file_provider": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"log.standard_logger.StandardLogger.__init__": {"tf": 1}}, "df": 1}, "s": {"docs": {"scrambled_string_finder.ScrambledStringFinder": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"config.config_utils": {"tf": 1}, "dictionary.dictionary_utils": {"tf": 1}, "dictionary.tests.test_dictionary_utils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "utils.file_utils": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"utils.tests.test_file_utils": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"config.tests.test_config_reader.TestConfigReader": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils": {"tf": 1}}, "df": 10}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"log.log_config.LogConfig.normalize_log_level": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"config.config.Config": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}}, "df": 1, "d": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}}, "df": 1}, "s": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 6}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"config.config.Config": {"tf": 1}}, "df": 1}}, "f": {"docs": {"config.config.Config": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1.4142135623730951}, "config.config_utils.print_config": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1.7320508075688772}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.7320508075688772}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1.7320508075688772}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "utils.file_utils.create_parent_directories": {"tf": 1}, "input_strings.input_file_provider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1.7320508075688772}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 39}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 2}, "config.config_utils.print_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "scrambled_strings.parse_arguments": {"tf": 1}}, "df": 5}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary_utils": {"tf": 1}, "log.logger": {"tf": 1}, "log.logger.Logger": {"tf": 1}}, "df": 4}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrambled_strings.main": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"config.config.Config.model_config": {"tf": 1}, "dictionary.dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.__init__": {"tf": 2}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1.4142135623730951}, "dictionary.dictionary_config": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.model_config": {"tf": 1}, "dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1.4142135623730951}, "dictionary.dictionary_errors": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "dictionary.dictionary_utils": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary": {"tf": 1}, "dictionary.tests.test_dictionary_utils": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "log.log_config.LogConfig.model_config": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.model_config": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1.7320508075688772}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 2}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 31, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_success": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1.4142135623730951}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"utils.file_utils.create_parent_directories": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"config.config_reader.ConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 7, "n": {"docs": {"log.standard_logger.StandardLogger.__init__": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary_data_storage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.setUp": {"tf": 1}, "log.log_config.LogConfig": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}}, "df": 13}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}}, "df": 3, "s": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}}, "df": 2, "s": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "log.logger": {"tf": 1}, "scrambled_string_finder": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_default_values": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_default_values": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"log.logger": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"log.logger.Logger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 3}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"config.config_reader": {"tf": 1}, "config.config_reader.ConfigReader": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_valid_config": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "log.log_config": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.standard_logger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 22}, "f": {"docs": {"config.config_reader.ConfigReader": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.7320508075688772}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1.4142135623730951}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1.4142135623730951}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 20}, "n": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1.4142135623730951}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 14, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"config.config_utils.print_config": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"log.logger.Logger.info": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.__init__": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1}}, "df": 5}, "d": {"docs": {"log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1.4142135623730951}, "log.logger": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}}, "df": 3}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "log.standard_logger.StandardLogger": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1.7320508075688772}, "log.standard_logger.StandardLogger.reset_instance": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"input_strings.input_file_provider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 2}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1.4142135623730951}, "input_strings.input_provider": {"tf": 1}, "input_strings.input_provider.InputProvider": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1.4142135623730951}, "input_strings.input_provider.InputProvider.get": {"tf": 1.4142135623730951}, "input_strings.input_string_errors": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1.7320508075688772}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1.4142135623730951}}, "df": 17, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "input_strings.input_file_provider": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "s": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_file_provider.InputFileProvider.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"utils.file_utils": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "input_strings.input_file_provider": {"tf": 1}}, "df": 3, "s": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "log.logger": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.set_dictionary_storage": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}}, "df": 4, "s": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"config.config_reader": {"tf": 1}, "config.config_reader.ConfigReader": {"tf": 1}, "log.log_config": {"tf": 1}, "log.standard_logger": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}, "input_strings.input_strings_config": {"tf": 1}}, "df": 6}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"log.standard_logger.StandardLogger.reset_instance": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}}, "df": 1, "s": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"config.config_reader": {"tf": 1}, "config.config_reader.ConfigReader": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1.4142135623730951}, "log.standard_logger.StandardLogger.__init__": {"tf": 1.4142135623730951}, "input_strings.input_file_provider.InputFileProvider.get": {"tf": 1.4142135623730951}, "input_strings.input_provider.InputProvider.get": {"tf": 1.4142135623730951}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}, "scrambled_strings.parse_arguments": {"tf": 1}}, "df": 18}, "e": {"docs": {}, "df": 0, "d": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary.Dictionary.get_all_words": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1}}, "df": 7}, "d": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}}, "df": 1, "s": {"docs": {"config.config_reader.ConfigReader": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_error": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 16}, "d": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}}, "df": 9}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_no_matches": {"tf": 1}}, "df": 1, "t": {"docs": {"config.config_reader.ConfigReader": {"tf": 1}, "config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_section_not_found": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "utils.file_utils.create_parent_directories": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 11, "e": {"docs": {"dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}}, "df": 1}}, "n": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.config_utils.print_config": {"tf": 1.4142135623730951}, "log.standard_logger.StandardLogger.__init__": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrambled_strings.check_arguments": {"tf": 1}, "scrambled_strings.parse_arguments": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}}, "df": 5}}}}}}, "w": {"docs": {"log.standard_logger.StandardLogger.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"log.log_config.LogConfig.validate_log_file": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 3, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"config.config_reader.ConfigReader": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "utils.file_utils.create_parent_directories": {"tf": 1}, "utils.tests.test_file_utils.TestFileUtils.test_create_parent_directories_already_exists": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 7, "s": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_get_config_success": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1.4142135623730951}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}}, "df": 1, "s": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}}, "df": 5, "s": {"docs": {"dictionary.dictionary_errors": {"tf": 1}, "input_strings.input_string_errors": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tests.test_scrambled_string_finder.TestScrambledStringFinder.test_exact_matches": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.setUp": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 5}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}}, "df": 16, "s": {"docs": {"dictionary.dictionary_errors.DictionaryError": {"tf": 1}, "input_strings.input_string_errors.InputStringError": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.test_empty_dictionary": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}, "config.config_utils.print_config": {"tf": 1}, "dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 1}}, "df": 10}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1.4142135623730951}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.generic_test_integration": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"log.standard_logger.StandardLogger": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.hash_dictionary_storage": {"tf": 1}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage.__init__": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.setUp": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrambled_strings.main": {"tf": 1}}, "df": 1, "s": {"docs": {"log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"config.config_reader.ConfigReader.get_config": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_set_storage": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_integration_with_hash_storage": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}}, "df": 4}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"config.tests.test_config_reader.TestConfigReader.test_init_file_not_found": {"tf": 1}, "config.tests.test_config_reader.TestConfigReader.test_init_file_exists": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrambled_string_finder": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 2}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.get_canonical_word": {"tf": 2}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1.7320508075688772}, "dictionary.dictionary_data_storage.DictionaryDataStorage.add_word": {"tf": 1.7320508075688772}, "dictionary.dictionary_data_storage.DictionaryDataStorage.contains_word": {"tf": 2}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_canonical_word": {"tf": 2}, "dictionary.dictionary_utils.compute_canonical_form": {"tf": 2}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 2.8284271247461903}, "dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1.4142135623730951}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.add_word": {"tf": 1.7320508075688772}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.contains_word": {"tf": 2}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_canonical_word": {"tf": 2.23606797749979}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.add_word": {"tf": 1.7320508075688772}, "dictionary.set_dictionary_storage.SetDictionaryStorage.contains_word": {"tf": 2}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_canonical_word": {"tf": 2}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}}, "df": 22, "s": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.add_word": {"tf": 1}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 1.7320508075688772}, "dictionary.dictionary.Dictionary.get_all_words": {"tf": 1.4142135623730951}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage": {"tf": 1}, "dictionary.dictionary_data_storage.DictionaryDataStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.7320508075688772}, "dictionary.hash_dictionary_storage.HashDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.set_dictionary_storage.SetDictionaryStorage": {"tf": 1}, "dictionary.set_dictionary_storage.SetDictionaryStorage.get_all_words": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_add_duplicate_word": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_hash_dictionary_storage.TestHashDictionaryStorage.test_get_canonical_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_add_and_contains_word": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_all_words": {"tf": 1}, "dictionary.tests.test_set_dictionary_storage.TestSetDictionaryStorage.test_get_canonical_word": {"tf": 1}, "scrambled_string_finder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 26}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"log.logger.Logger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dictionary.dictionary.Dictionary": {"tf": 1}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}}, "df": 3, "s": {"docs": {"log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dictionary.dictionary.Dictionary.add_word": {"tf": 1.4142135623730951}, "dictionary.dictionary.Dictionary.load_from_file": {"tf": 2}, "dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1.7320508075688772}, "dictionary.dictionary_utils.validate_word_length_or_raise": {"tf": 2.449489742783178}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 2.449489742783178}, "dictionary.tests.test_dictionary.TestDictionary.test_large_words_exceeding_length_range": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_greater_than_max": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_min_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_negative": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_word_length_or_raise": {"tf": 1}, "dictionary.tests.test_dictionary_utils.TestDictionaryUtils.test_validate_total_length_or_raise": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1.4142135623730951}}, "df": 15, "s": {"docs": {"dictionary.dictionary_config.DictionaryConfig.validate_attributes": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_word_length_greater_than_sum_lengths": {"tf": 1}, "dictionary.tests.test_dictionary_config.TestDictionaryConfig.test_dictionary_max_sum_lengths_negative": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"log.log_config": {"tf": 1}, "log.log_config.LogConfig.normalize_log_level": {"tf": 1}, "log.log_config.LogConfig.validate_log_file": {"tf": 1}, "log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_max_bytes": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_negative_log_backup_count": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_empty_log_file": {"tf": 1}}, "df": 15, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dictionary.dictionary.Dictionary.__init__": {"tf": 1.7320508075688772}, "log.logger": {"tf": 1.4142135623730951}, "log.standard_logger.StandardLogger": {"tf": 1}, "log.standard_logger.StandardLogger.__init__": {"tf": 2.449489742783178}, "log.tests.test_standard_logger.TestStandardLogger.test_logger_initialization": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "tests.test_scrambled_string_finder.TestScrambledStringFinder.setUp": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.__init__": {"tf": 1.7320508075688772}, "scrambled_strings.check_arguments": {"tf": 1.7320508075688772}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"log.log_config.LogConfig": {"tf": 1}, "log.logger": {"tf": 1}, "log.logger.Logger": {"tf": 1}, "log.standard_logger": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.test_logging_methods": {"tf": 1}, "scrambled_strings.check_arguments": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"log.logger.Logger.info": {"tf": 1}, "log.logger.Logger.debug": {"tf": 1}, "log.logger.Logger.warning": {"tf": 1}, "log.logger.Logger.error": {"tf": 1}, "log.logger.Logger.critical": {"tf": 1}, "log.logger.Logger.always": {"tf": 1}, "log.standard_logger.StandardLogger.info": {"tf": 1}, "log.standard_logger.StandardLogger.debug": {"tf": 1}, "log.standard_logger.StandardLogger.warning": {"tf": 1}, "log.standard_logger.StandardLogger.error": {"tf": 1}, "log.standard_logger.StandardLogger.critical": {"tf": 1}, "log.standard_logger.StandardLogger.always": {"tf": 1}}, "df": 12}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"log.standard_logger.StandardLogger.__init__": {"tf": 1.4142135623730951}, "log.tests.test_log_config": {"tf": 1}, "log.tests.test_log_config.TestLogConfig": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_log_level_case_insensitivity": {"tf": 1}, "log.tests.test_log_config.TestLogConfig.test_invalid_log_level": {"tf": 1}, "log.tests.test_standard_logger.TestStandardLogger.setUp": {"tf": 1}}, "df": 7}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"dictionary.hash_dictionary_storage.HashDictionaryStorage": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dictionary.tests.test_dictionary.TestDictionary.test_load_from_file": {"tf": 1}, "dictionary.tests.test_dictionary.TestDictionary.test_load_from_empty_file": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"log.tests.test_log_config.TestLogConfig.test_log_config_valid": {"tf": 1}, "input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_provider.InputProvider.load": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"input_strings.input_provider.InputProvider.load": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.dictionary.Dictionary.load_from_file": {"tf": 1}, "dictionary.dictionary_utils.validate_total_length_or_raise": {"tf": 1.4142135623730951}, "dictionary.tests.test_dictionary.TestDictionary.test_total_allowed_length_exceeded": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}, "input_strings.input_strings_config.InputStringsConfig.validate_attributes": {"tf": 1.4142135623730951}, "scrambled_strings.check_arguments": {"tf": 1.4142135623730951}, "scrambled_strings.parse_arguments": {"tf": 1.4142135623730951}, "scrambled_strings.main": {"tf": 1}}, "df": 5, "s": {"docs": {"input_strings.input_file_provider.InputFileProvider.load": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}, "scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 3, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"input_strings.input_file_provider.InputFileProvider.get": {"tf": 1}, "input_strings.input_provider.InputProvider.get": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrambled_string_finder.ScrambledStringFinder.find_scrambled_strings": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"dictionary.dictionary_utils.compute_canonical_form": {"tf": 1}}, "df": 1}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();